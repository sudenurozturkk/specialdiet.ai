{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\specialdiet.ai\\\\diyet-dostu-web\\\\client\\\\src\\\\components\\\\DietPlanGenerator.js\";\nimport React, { useState, useEffect } from 'react';\nconst DietPlanGenerator = ({\n  userInfo\n}) => {\n  const [dietPlan, setDietPlan] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('overview');\n  useEffect(() => {\n    if (userInfo) {\n      generateDietPlan(userInfo);\n    }\n  }, [userInfo]);\n  const calculateBMR = userInfo => {\n    // Harris-Benedict denklemi\n    const {\n      gender,\n      weight,\n      height,\n      age\n    } = userInfo;\n    let bmr = 0;\n    if (gender === 'erkek') {\n      bmr = 88.362 + 13.397 * parseFloat(weight) + 4.799 * parseFloat(height) - 5.677 * parseFloat(age);\n    } else {\n      bmr = 447.593 + 9.247 * parseFloat(weight) + 3.098 * parseFloat(height) - 4.330 * parseFloat(age);\n    }\n    return Math.round(bmr);\n  };\n  const calculateTDEE = (bmr, activityLevel) => {\n    // Aktivite çarpanları\n    const activityMultipliers = {\n      sedanter: 1.2,\n      hafif_aktif: 1.375,\n      orta_aktif: 1.55,\n      cok_aktif: 1.725,\n      ekstra_aktif: 1.9\n    };\n    return Math.round(bmr * activityMultipliers[activityLevel]);\n  };\n  const calculateTargetCalories = (tdee, dietGoal) => {\n    // Hedeflere göre kalori hesaplama\n    let targetCalories = tdee;\n    switch (dietGoal) {\n      case 'kilo_verme':\n        targetCalories = Math.round(tdee * 0.8); // %20 kalori açığı\n        break;\n      case 'kilo_alma':\n        targetCalories = Math.round(tdee * 1.15); // %15 kalori fazlası\n        break;\n      case 'kas_kazanma':\n        targetCalories = Math.round(tdee * 1.1); // %10 kalori fazlası\n        break;\n      default:\n        targetCalories = tdee;\n      // Kilo koruma\n    }\n\n    // Minumum kalori sınırı (sağlık açısından)\n    const minCalories = userInfo.gender === 'erkek' ? 1500 : 1200;\n    return Math.max(targetCalories, minCalories);\n  };\n  const calculateWaterIntake = weight => {\n    // Kilo başına 30ml su hesabı (genel kural)\n    const minWater = Math.round(parseFloat(weight) * 30 / 1000, 1);\n    // Kilo başına 40ml su hesabı (aktif kişiler için)\n    const maxWater = Math.round(parseFloat(weight) * 40 / 1000, 1);\n    return {\n      min: minWater,\n      max: maxWater,\n      cups: Math.round((minWater + maxWater) / 2 * 4) // 250ml'lik bardak sayısı\n    };\n  };\n  const generateMacroDistribution = (targetCalories, dietGoal) => {\n    let proteinPercentage, carbPercentage, fatPercentage;\n\n    // Hedeflere göre makro dağılımı\n    switch (dietGoal) {\n      case 'kilo_verme':\n        proteinPercentage = 0.35; // %35\n        fatPercentage = 0.30; // %30\n        carbPercentage = 0.35; // %35\n        break;\n      case 'kilo_alma':\n        proteinPercentage = 0.25; // %25\n        fatPercentage = 0.25; // %25\n        carbPercentage = 0.50; // %50\n        break;\n      case 'kas_kazanma':\n        proteinPercentage = 0.30; // %30\n        fatPercentage = 0.25; // %25\n        carbPercentage = 0.45; // %45\n        break;\n      default:\n        proteinPercentage = 0.20; // %20\n        fatPercentage = 0.30; // %30\n        carbPercentage = 0.50;\n      // %50\n    }\n\n    // Gram hesaplamaları (1g protein/karbonhidrat = 4 kalori, 1g yağ = 9 kalori)\n    const proteinCalories = targetCalories * proteinPercentage;\n    const carbCalories = targetCalories * carbPercentage;\n    const fatCalories = targetCalories * fatPercentage;\n    const proteinGrams = Math.round(proteinCalories / 4);\n    const carbGrams = Math.round(carbCalories / 4);\n    const fatGrams = Math.round(fatCalories / 9);\n    return {\n      protein: {\n        percentage: Math.round(proteinPercentage * 100),\n        grams: proteinGrams,\n        calories: Math.round(proteinCalories)\n      },\n      carbs: {\n        percentage: Math.round(carbPercentage * 100),\n        grams: carbGrams,\n        calories: Math.round(carbCalories)\n      },\n      fat: {\n        percentage: Math.round(fatPercentage * 100),\n        grams: fatGrams,\n        calories: Math.round(fatCalories)\n      }\n    };\n  };\n  const generateTurkishMealPlan = (targetCalories, macros, mealCount) => {\n    // Öğün sayısına göre kalori dağılımı\n    const mealDistribution = {\n      '3': {\n        breakfast: 0.25,\n        lunch: 0.40,\n        dinner: 0.35\n      },\n      '4': {\n        breakfast: 0.20,\n        lunch: 0.35,\n        dinner: 0.30,\n        snack1: 0.15\n      },\n      '5': {\n        breakfast: 0.20,\n        lunch: 0.30,\n        dinner: 0.25,\n        snack1: 0.15,\n        snack2: 0.10\n      },\n      '6': {\n        breakfast: 0.20,\n        lunch: 0.25,\n        dinner: 0.25,\n        snack1: 0.10,\n        snack2: 0.10,\n        snack3: 0.10\n      }\n    };\n\n    // Türk mutfağına uygun yemek önerileri\n    const turkishFoods = {\n      breakfast: [{\n        name: 'Kahvaltı 1',\n        description: '2 dilim tam tahıllı ekmek, 2 yumurta, 50g lor peyniri, 4-5 adet zeytin, 1 domates, 1 salatalık, 1 tatlı kaşığı bal, bitki çayı',\n        calories: 400\n      }, {\n        name: 'Kahvaltı 2',\n        description: '1 kase yulaf ezmesi (40g), 1 su bardağı yarım yağlı süt, 1 adet muz, 1 tatlı kaşığı tarçın, 10g ceviz içi',\n        calories: 380\n      }, {\n        name: 'Kahvaltı 3',\n        description: 'Menemen (2 yumurta, 1 domates, 1 biber), 1 dilim tam tahıllı ekmek, 30g beyaz peynir, 5 adet zeytin, bitki çayı',\n        calories: 420\n      }],\n      lunch: [{\n        name: 'Öğle Yemeği 1',\n        description: '120g ızgara tavuk, 1 kase sebzeli bulgur pilavı, mevsim salata (zeytinyağlı, limon), 1 kase yoğurt',\n        calories: 550\n      }, {\n        name: 'Öğle Yemeği 2',\n        description: '100g etli sebze yemeği, 1 porsiyon mercimek çorbası, 1 dilim tam tahıllı ekmek, 1 kase yoğurt',\n        calories: 500\n      }, {\n        name: 'Öğle Yemeği 3',\n        description: '1 porsiyon kuru fasulye, 1/2 porsiyon bulgur pilavı, 1 kase cacık, yeşil salata',\n        calories: 520\n      }],\n      dinner: [{\n        name: 'Akşam Yemeği 1',\n        description: '150g ızgara balık, 1 orta boy haşlanmış patates, mevsim salata (zeytinyağlı, limon)',\n        calories: 450\n      }, {\n        name: 'Akşam Yemeği 2',\n        description: '100g köfte (az yağlı), 1/2 porsiyon bulgur pilavı, 1 kase yoğurt, mevsim salata',\n        calories: 480\n      }, {\n        name: 'Akşam Yemeği 3',\n        description: '1 porsiyon sebzeli tavuk sote, 1 kase çoban salata, 1 dilim tam tahıllı ekmek',\n        calories: 430\n      }],\n      snacks: [{\n        name: 'Ara Öğün 1',\n        description: '1 adet orta boy meyve (elma, armut veya portakal) + 30g tuzsuz badem',\n        calories: 200\n      }, {\n        name: 'Ara Öğün 2',\n        description: '1 kase yarım yağlı yoğurt + 1 tatlı kaşığı bal + 1 yemek kaşığı yulaf',\n        calories: 180\n      }, {\n        name: 'Ara Öğün 3',\n        description: '1 avuç karışık kuruyemiş (badem, ceviz, fındık)',\n        calories: 170\n      }, {\n        name: 'Ara Öğün 4',\n        description: '2 adet tam tahıllı bisküvi + 1 bardak yarım yağlı ayran',\n        calories: 150\n      }, {\n        name: 'Ara Öğün 5',\n        description: '1 küçük kase mevsim meyveleri + 30g çekirdeksiz kuru üzüm',\n        calories: 160\n      }]\n    };\n\n    // Öğün planı oluştur\n    const mealPlan = {};\n    const distributionPlan = mealDistribution[mealCount.toString()];\n    Object.keys(distributionPlan).forEach(meal => {\n      const mealCalories = Math.round(targetCalories * distributionPlan[meal]);\n      if (meal === 'breakfast') {\n        // Rastgele bir kahvaltı seç\n        const selectedMeal = turkishFoods.breakfast[Math.floor(Math.random() * turkishFoods.breakfast.length)];\n        mealPlan[meal] = {\n          ...selectedMeal,\n          targetCalories: mealCalories\n        };\n      } else if (meal === 'lunch') {\n        // Rastgele bir öğle yemeği seç\n        const selectedMeal = turkishFoods.lunch[Math.floor(Math.random() * turkishFoods.lunch.length)];\n        mealPlan[meal] = {\n          ...selectedMeal,\n          targetCalories: mealCalories\n        };\n      } else if (meal === 'dinner') {\n        // Rastgele bir akşam yemeği seç\n        const selectedMeal = turkishFoods.dinner[Math.floor(Math.random() * turkishFoods.dinner.length)];\n        mealPlan[meal] = {\n          ...selectedMeal,\n          targetCalories: mealCalories\n        };\n      } else {\n        // Ara öğün\n        const snackIndex = Math.floor(Math.random() * turkishFoods.snacks.length);\n        mealPlan[meal] = {\n          ...turkishFoods.snacks[snackIndex],\n          targetCalories: mealCalories\n        };\n      }\n    });\n    return mealPlan;\n  };\n  const generateDietPlan = userInfo => {\n    setIsLoading(true);\n    try {\n      // BMR (Bazal Metabolizma Hızı) Hesaplama\n      const bmr = calculateBMR(userInfo);\n\n      // TDEE (Toplam Günlük Enerji Harcaması) Hesaplama\n      const tdee = calculateTDEE(bmr, userInfo.activityLevel);\n\n      // Hedef Kalori Hesaplama\n      const targetCalories = calculateTargetCalories(tdee, userInfo.dietGoal);\n\n      // Makro Besin Dağılımı\n      const macroDistribution = generateMacroDistribution(targetCalories, userInfo.dietGoal);\n\n      // Öğün Planı\n      const mealPlan = generateTurkishMealPlan(targetCalories, macroDistribution, userInfo.mealCount || 3);\n\n      // Diyet Planı Objesi\n      const generatedPlan = {\n        stats: {\n          bmr: bmr,\n          tdee: tdee,\n          targetCalories: targetCalories\n        },\n        macros: macroDistribution,\n        mealPlan: mealPlan,\n        waterIntake: calculateWaterIntake(userInfo.weight)\n      };\n      setDietPlan(generatedPlan);\n    } catch (error) {\n      console.error(\"Diyet planı oluşturulurken hata:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const formatDate = date => {\n    if (!date) return '';\n    return date.toLocaleDateString('tr-TR', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center py-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inline-block animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-diet-green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-3 text-gray-600\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }\n    }, \"Diyet plan\\u0131n\\u0131z olu\\u015Fturuluyor...\"));\n  }\n  if (!dietPlan) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center py-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-red-500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }\n    }, \"Diyet plan\\u0131 olu\\u015Fturulamad\\u0131. L\\xFCtfen daha sonra tekrar deneyin.\"));\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white rounded-lg shadow-lg p-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-2xl font-bold text-diet-green mb-6 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }\n  }, \"Ki\\u015Fiselle\\u015Ftirilmi\\u015F Beslenme Plan\\u0131n\\u0131z\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-center space-x-4 border-b\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `py-2 px-4 font-medium ${activeTab === 'overview' ? 'text-diet-green border-b-2 border-diet-green' : 'text-gray-500'}`,\n    onClick: () => setActiveTab('overview'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 11\n    }\n  }, \"Genel Bilgiler\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: `py-2 px-4 font-medium ${activeTab === 'meals' ? 'text-diet-green border-b-2 border-diet-green' : 'text-gray-500'}`,\n    onClick: () => setActiveTab('meals'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 11\n    }\n  }, \"Beslenme Plan\\u0131\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: `py-2 px-4 font-medium ${activeTab === 'tips' ? 'text-diet-green border-b-2 border-diet-green' : 'text-gray-500'}`,\n    onClick: () => setActiveTab('tips'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 11\n    }\n  }, \"Beslenme \\xD6nerileri\"))), activeTab === 'overview' && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-gray-50 p-4 rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"font-bold text-diet-green text-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  }, \"G\\xFCnl\\xFCk Kalori \\u0130htiyac\\u0131\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-2xl font-bold text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 15\n    }\n  }, dietPlan.stats.targetCalories, \" kcal\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-sm text-gray-500 mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 17\n    }\n  }, \"Bazal Metabolizma: \", dietPlan.stats.bmr, \" kcal\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 17\n    }\n  }, \"Toplam Enerji \\u0130htiyac\\u0131: \", dietPlan.stats.tdee, \" kcal\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-gray-50 p-4 rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"font-bold text-diet-green text-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 15\n    }\n  }, \"Su T\\xFCketimi\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-2xl font-bold text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 15\n    }\n  }, dietPlan.waterIntake.min, \"-\", dietPlan.waterIntake.max, \" litre/g\\xFCn\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-sm text-gray-500 mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 17\n    }\n  }, \"Yakla\\u015F\\u0131k: \", dietPlan.waterIntake.cups, \" bardak su\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-gray-50 p-4 rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"font-bold text-diet-green text-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 15\n    }\n  }, \"Makro Besin Da\\u011F\\u0131l\\u0131m\\u0131\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-between items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-sm text-gray-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 19\n    }\n  }, \"Protein\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-bold text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 19\n    }\n  }, dietPlan.macros.protein.grams, \"g\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-xs text-gray-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 19\n    }\n  }, \"%\", dietPlan.macros.protein.percentage)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-sm text-gray-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 19\n    }\n  }, \"Karbonhidrat\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-bold text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 19\n    }\n  }, dietPlan.macros.carbs.grams, \"g\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-xs text-gray-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 19\n    }\n  }, \"%\", dietPlan.macros.carbs.percentage)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-sm text-gray-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 19\n    }\n  }, \"Ya\\u011F\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"font-bold text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 19\n    }\n  }, dietPlan.macros.fat.grams, \"g\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-xs text-gray-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 19\n    }\n  }, \"%\", dietPlan.macros.fat.percentage))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"font-bold text-diet-green text-xl mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }\n  }, \"Beslenme \\xD6nerileri\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-gray-50 p-4 rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-disc list-inside space-y-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 17\n    }\n  }, \"G\\xFCnde en az 2-3 litre su i\\xE7meye \\xF6zen g\\xF6sterin.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 17\n    }\n  }, \"\\xD6\\u011F\\xFCnlerinizi d\\xFCzenli saatlerde t\\xFCketin ve \\xF6\\u011F\\xFCn atlamay\\u0131n.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 17\n    }\n  }, \"Besinleri iyice \\xE7i\\u011Fneyerek yava\\u015F yava\\u015F t\\xFCketin.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 17\n    }\n  }, \"Yemeklerinizi pi\\u015Firirken k\\u0131zartma yerine \\u0131zgara, ha\\u015Flama, f\\u0131r\\u0131nda pi\\u015Firme gibi sa\\u011Fl\\u0131kl\\u0131 pi\\u015Firme y\\xF6ntemlerini tercih edin.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 17\n    }\n  }, \"Tuz t\\xFCketiminizi s\\u0131n\\u0131rland\\u0131r\\u0131n ve yemeklerinizde baharat kullanmay\\u0131 tercih edin.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 17\n    }\n  }, \"Rafine \\u015Feker t\\xFCketimini azalt\\u0131n, tatl\\u0131 ihtiyac\\u0131n\\u0131z i\\xE7in meyve gibi do\\u011Fal tatl\\u0131lar\\u0131 tercih edin.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 17\n    }\n  }, \"Haftada en az 3-4 kez 30-45 dakikal\\u0131k egzersiz yap\\u0131n.\"))))), activeTab === 'meals' && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"font-bold text-diet-green text-xl mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 11\n    }\n  }, \"G\\xFCnl\\xFCk Beslenme Plan\\u0131\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"space-y-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 11\n    }\n  }, Object.keys(dietPlan.mealPlan).map(meal => {\n    const mealInfo = dietPlan.mealPlan[meal];\n    let mealTitle = '';\n    switch (meal) {\n      case 'breakfast':\n        mealTitle = 'Kahvaltı';\n        break;\n      case 'lunch':\n        mealTitle = 'Öğle Yemeği';\n        break;\n      case 'dinner':\n        mealTitle = 'Akşam Yemeği';\n        break;\n      default:\n        const snackNumber = meal.replace('snack', '');\n        mealTitle = `Ara Öğün ${snackNumber}`;\n    }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: meal,\n      className: \"bg-gray-50 p-4 rounded-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex justify-between items-center mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"font-bold text-gray-800\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 21\n      }\n    }, mealTitle), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-sm text-gray-500\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 21\n      }\n    }, \"Hedef: \", mealInfo.targetCalories, \" kcal\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-gray-700\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 19\n      }\n    }, mealInfo.description));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-6 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bg-diet-green text-white py-2 px-6 rounded-lg hover:bg-green-600 transition\",\n    onClick: () => generateDietPlan(userInfo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 13\n    }\n  }, \"Farkl\\u0131 \\xD6neriler Al\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-sm text-gray-500 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 13\n    }\n  }, \"Be\\u011Fenmedi\\u011Finiz yemekler i\\xE7in alternatif \\xF6neriler almak i\\xE7in t\\u0131klay\\u0131n.\"))), activeTab === 'tips' && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"font-bold text-diet-green text-xl mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 11\n    }\n  }, \"Beslenme \\xD6nerileri\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"space-y-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-gray-50 p-4 rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"font-bold text-gray-800 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 15\n    }\n  }, \"Protein Kaynaklar\\u0131\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-gray-700 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 15\n    }\n  }, \"G\\xFCnl\\xFCk protein ihtiyac\\u0131n\\u0131z: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 77\n    }\n  }, dietPlan.macros.protein.grams, \"g\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-disc list-inside space-y-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 17\n    }\n  }, \"Tavuk g\\xF6\\u011Fs\\xFC (100g) - 24g protein\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 17\n    }\n  }, \"Yumurta (1 adet) - 6g protein\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 17\n    }\n  }, \"Yo\\u011Furt (1 kase) - 10g protein\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 17\n    }\n  }, \"K\\u0131rm\\u0131z\\u0131 et (100g) - 20g protein\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 17\n    }\n  }, \"Bal\\u0131k (100g) - 22g protein\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 17\n    }\n  }, \"Mercimek (100g pi\\u015Fmi\\u015F) - 9g protein\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 17\n    }\n  }, \"Peynir (30g) - 7g protein\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-gray-50 p-4 rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"font-bold text-gray-800 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 15\n    }\n  }, \"Sa\\u011Fl\\u0131kl\\u0131 Karbonhidrat Kaynaklar\\u0131\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-gray-700 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 15\n    }\n  }, \"G\\xFCnl\\xFCk karbonhidrat ihtiyac\\u0131n\\u0131z: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 82\n    }\n  }, dietPlan.macros.carbs.grams, \"g\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-disc list-inside space-y-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 17\n    }\n  }, \"Tam tah\\u0131ll\\u0131 ekmek (1 dilim) - 15g karbonhidrat\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 17\n    }\n  }, \"Yulaf ezmesi (1/2 kase) - 27g karbonhidrat\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 17\n    }\n  }, \"Bulgur (1/2 kase pi\\u015Fmi\\u015F) - 17g karbonhidrat\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 17\n    }\n  }, \"Kahverengi pirin\\xE7 (1/2 kase pi\\u015Fmi\\u015F) - 22g karbonhidrat\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 17\n    }\n  }, \"Patates (1 orta boy) - 30g karbonhidrat\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 17\n    }\n  }, \"Muz (1 adet) - 27g karbonhidrat\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 17\n    }\n  }, \"Kuru baklagiller (100g pi\\u015Fmi\\u015F) - 20g karbonhidrat\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-gray-50 p-4 rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"font-bold text-gray-800 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 15\n    }\n  }, \"Sa\\u011Fl\\u0131kl\\u0131 Ya\\u011F Kaynaklar\\u0131\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-gray-700 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 15\n    }\n  }, \"G\\xFCnl\\xFCk ya\\u011F ihtiyac\\u0131n\\u0131z: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 73\n    }\n  }, dietPlan.macros.fat.grams, \"g\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-disc list-inside space-y-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 17\n    }\n  }, \"Zeytinya\\u011F\\u0131 (1 yemek ka\\u015F\\u0131\\u011F\\u0131) - 14g ya\\u011F\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 17\n    }\n  }, \"Avokado (1/2 adet) - 15g ya\\u011F\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 17\n    }\n  }, \"Ceviz (30g) - 19g ya\\u011F\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 17\n    }\n  }, \"Badem (30g) - 15g ya\\u011F\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 17\n    }\n  }, \"F\\u0131nd\\u0131k (30g) - 18g ya\\u011F\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 17\n    }\n  }, \"Keten tohumu (1 yemek ka\\u015F\\u0131\\u011F\\u0131) - 4g ya\\u011F\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 17\n    }\n  }, \"Yumurta sar\\u0131s\\u0131 (1 adet) - 5g ya\\u011F\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-gray-50 p-4 rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"font-bold text-gray-800 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 15\n    }\n  }, \"D\\u0131\\u015Far\\u0131da Yemek Yerken\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-disc list-inside space-y-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 17\n    }\n  }, \"Izgara et, tavuk veya bal\\u0131k tercih edin.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 17\n    }\n  }, \"Salata veya sebze garnit\\xFCr\\xFC isteyin.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 17\n    }\n  }, \"Sulu ve ya\\u011Fl\\u0131 soslardan ka\\xE7\\u0131n\\u0131n.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 17\n    }\n  }, \"Tam tah\\u0131ll\\u0131 ekmek/bulgur/pirin\\xE7 gibi se\\xE7enekleri tercih edin.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 17\n    }\n  }, \"Tatl\\u0131 yerine meyve veya sade T\\xFCrk kahvesi tercih edin.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 17\n    }\n  }, \"Alkoll\\xFC i\\xE7ecekler yerine su, ayran veya \\u015Fekersiz i\\xE7ecekler i\\xE7in.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-gray-50 p-4 rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"font-bold text-gray-800 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 15\n    }\n  }, \"Alternatif Ara \\xD6\\u011F\\xFCn Fikirleri\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-disc list-inside space-y-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 17\n    }\n  }, \"Yar\\u0131m ya\\u011Fl\\u0131 lor peyniri (4 yemek ka\\u015F\\u0131\\u011F\\u0131) + salatal\\u0131k/domates\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 17\n    }\n  }, \"Yar\\u0131m ya\\u011Fl\\u0131 ayran (1 bardak) + tam tah\\u0131ll\\u0131 kraker (3-4 adet)\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 17\n    }\n  }, \"Ceviz, badem, f\\u0131nd\\u0131k kar\\u0131\\u015F\\u0131m\\u0131 (1 avu\\xE7)\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 17\n    }\n  }, \"Mevsim meyveleri (1 porsiyon)\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 17\n    }\n  }, \"Ev yap\\u0131m\\u0131 kefir (1 su barda\\u011F\\u0131) + tar\\xE7\\u0131n\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 17\n    }\n  }, \"Tam tah\\u0131ll\\u0131 ekmek (1 dilim) + 1 tatl\\u0131 ka\\u015F\\u0131\\u011F\\u0131 pekmez\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 17\n    }\n  }, \"Labne peynir (2 yemek ka\\u015F\\u0131\\u011F\\u0131) + salatal\\u0131k\"))))));\n};\nexport default DietPlanGenerator;","map":{"version":3,"names":["React","useState","useEffect","DietPlanGenerator","userInfo","dietPlan","setDietPlan","isLoading","setIsLoading","activeTab","setActiveTab","generateDietPlan","calculateBMR","gender","weight","height","age","bmr","parseFloat","Math","round","calculateTDEE","activityLevel","activityMultipliers","sedanter","hafif_aktif","orta_aktif","cok_aktif","ekstra_aktif","calculateTargetCalories","tdee","dietGoal","targetCalories","minCalories","max","calculateWaterIntake","minWater","maxWater","min","cups","generateMacroDistribution","proteinPercentage","carbPercentage","fatPercentage","proteinCalories","carbCalories","fatCalories","proteinGrams","carbGrams","fatGrams","protein","percentage","grams","calories","carbs","fat","generateTurkishMealPlan","macros","mealCount","mealDistribution","breakfast","lunch","dinner","snack1","snack2","snack3","turkishFoods","name","description","snacks","mealPlan","distributionPlan","toString","Object","keys","forEach","meal","mealCalories","selectedMeal","floor","random","length","snackIndex","macroDistribution","generatedPlan","stats","waterIntake","error","console","formatDate","date","toLocaleDateString","year","month","day","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","mealInfo","mealTitle","snackNumber","replace","key"],"sources":["C:/Users/Administrator/Desktop/specialdiet.ai/diyet-dostu-web/client/src/components/DietPlanGenerator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst DietPlanGenerator = ({ userInfo }) => {\r\n  const [dietPlan, setDietPlan] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState('overview');\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      generateDietPlan(userInfo);\r\n    }\r\n  }, [userInfo]);\r\n\r\n  const calculateBMR = (userInfo) => {\r\n    // Harris-Benedict denklemi\r\n    const { gender, weight, height, age } = userInfo;\r\n    let bmr = 0;\r\n    \r\n    if (gender === 'erkek') {\r\n      bmr = 88.362 + (13.397 * parseFloat(weight)) + (4.799 * parseFloat(height)) - (5.677 * parseFloat(age));\r\n    } else {\r\n      bmr = 447.593 + (9.247 * parseFloat(weight)) + (3.098 * parseFloat(height)) - (4.330 * parseFloat(age));\r\n    }\r\n    \r\n    return Math.round(bmr);\r\n  };\r\n\r\n  const calculateTDEE = (bmr, activityLevel) => {\r\n    // Aktivite çarpanları\r\n    const activityMultipliers = {\r\n      sedanter: 1.2,\r\n      hafif_aktif: 1.375,\r\n      orta_aktif: 1.55,\r\n      cok_aktif: 1.725,\r\n      ekstra_aktif: 1.9\r\n    };\r\n    \r\n    return Math.round(bmr * activityMultipliers[activityLevel]);\r\n  };\r\n\r\n  const calculateTargetCalories = (tdee, dietGoal) => {\r\n    // Hedeflere göre kalori hesaplama\r\n    let targetCalories = tdee;\r\n    \r\n    switch (dietGoal) {\r\n      case 'kilo_verme':\r\n        targetCalories = Math.round(tdee * 0.8); // %20 kalori açığı\r\n        break;\r\n      case 'kilo_alma':\r\n        targetCalories = Math.round(tdee * 1.15); // %15 kalori fazlası\r\n        break;\r\n      case 'kas_kazanma':\r\n        targetCalories = Math.round(tdee * 1.1); // %10 kalori fazlası\r\n        break;\r\n      default:\r\n        targetCalories = tdee; // Kilo koruma\r\n    }\r\n    \r\n    // Minumum kalori sınırı (sağlık açısından)\r\n    const minCalories = userInfo.gender === 'erkek' ? 1500 : 1200;\r\n    return Math.max(targetCalories, minCalories);\r\n  };\r\n\r\n  const calculateWaterIntake = (weight) => {\r\n    // Kilo başına 30ml su hesabı (genel kural)\r\n    const minWater = Math.round((parseFloat(weight) * 30) / 1000, 1);\r\n    // Kilo başına 40ml su hesabı (aktif kişiler için)\r\n    const maxWater = Math.round((parseFloat(weight) * 40) / 1000, 1);\r\n    \r\n    return {\r\n      min: minWater,\r\n      max: maxWater,\r\n      cups: Math.round((minWater + maxWater) / 2 * 4) // 250ml'lik bardak sayısı\r\n    };\r\n  };\r\n\r\n  const generateMacroDistribution = (targetCalories, dietGoal) => {\r\n    let proteinPercentage, carbPercentage, fatPercentage;\r\n    \r\n    // Hedeflere göre makro dağılımı\r\n    switch (dietGoal) {\r\n      case 'kilo_verme':\r\n        proteinPercentage = 0.35; // %35\r\n        fatPercentage = 0.30; // %30\r\n        carbPercentage = 0.35; // %35\r\n        break;\r\n      case 'kilo_alma':\r\n        proteinPercentage = 0.25; // %25\r\n        fatPercentage = 0.25; // %25\r\n        carbPercentage = 0.50; // %50\r\n        break;\r\n      case 'kas_kazanma':\r\n        proteinPercentage = 0.30; // %30\r\n        fatPercentage = 0.25; // %25\r\n        carbPercentage = 0.45; // %45\r\n        break;\r\n      default:\r\n        proteinPercentage = 0.20; // %20\r\n        fatPercentage = 0.30; // %30\r\n        carbPercentage = 0.50; // %50\r\n    }\r\n    \r\n    // Gram hesaplamaları (1g protein/karbonhidrat = 4 kalori, 1g yağ = 9 kalori)\r\n    const proteinCalories = targetCalories * proteinPercentage;\r\n    const carbCalories = targetCalories * carbPercentage;\r\n    const fatCalories = targetCalories * fatPercentage;\r\n    \r\n    const proteinGrams = Math.round(proteinCalories / 4);\r\n    const carbGrams = Math.round(carbCalories / 4);\r\n    const fatGrams = Math.round(fatCalories / 9);\r\n    \r\n    return {\r\n      protein: {\r\n        percentage: Math.round(proteinPercentage * 100),\r\n        grams: proteinGrams,\r\n        calories: Math.round(proteinCalories)\r\n      },\r\n      carbs: {\r\n        percentage: Math.round(carbPercentage * 100),\r\n        grams: carbGrams,\r\n        calories: Math.round(carbCalories)\r\n      },\r\n      fat: {\r\n        percentage: Math.round(fatPercentage * 100),\r\n        grams: fatGrams,\r\n        calories: Math.round(fatCalories)\r\n      }\r\n    };\r\n  };\r\n\r\n  const generateTurkishMealPlan = (targetCalories, macros, mealCount) => {\r\n    // Öğün sayısına göre kalori dağılımı\r\n    const mealDistribution = {\r\n      '3': { breakfast: 0.25, lunch: 0.40, dinner: 0.35 },\r\n      '4': { breakfast: 0.20, lunch: 0.35, dinner: 0.30, snack1: 0.15 },\r\n      '5': { breakfast: 0.20, lunch: 0.30, dinner: 0.25, snack1: 0.15, snack2: 0.10 },\r\n      '6': { breakfast: 0.20, lunch: 0.25, dinner: 0.25, snack1: 0.10, snack2: 0.10, snack3: 0.10 }\r\n    };\r\n    \r\n    // Türk mutfağına uygun yemek önerileri\r\n    const turkishFoods = {\r\n      breakfast: [\r\n        {\r\n          name: 'Kahvaltı 1',\r\n          description: '2 dilim tam tahıllı ekmek, 2 yumurta, 50g lor peyniri, 4-5 adet zeytin, 1 domates, 1 salatalık, 1 tatlı kaşığı bal, bitki çayı',\r\n          calories: 400\r\n        },\r\n        {\r\n          name: 'Kahvaltı 2',\r\n          description: '1 kase yulaf ezmesi (40g), 1 su bardağı yarım yağlı süt, 1 adet muz, 1 tatlı kaşığı tarçın, 10g ceviz içi',\r\n          calories: 380\r\n        },\r\n        {\r\n          name: 'Kahvaltı 3',\r\n          description: 'Menemen (2 yumurta, 1 domates, 1 biber), 1 dilim tam tahıllı ekmek, 30g beyaz peynir, 5 adet zeytin, bitki çayı',\r\n          calories: 420\r\n        }\r\n      ],\r\n      lunch: [\r\n        {\r\n          name: 'Öğle Yemeği 1',\r\n          description: '120g ızgara tavuk, 1 kase sebzeli bulgur pilavı, mevsim salata (zeytinyağlı, limon), 1 kase yoğurt',\r\n          calories: 550\r\n        },\r\n        {\r\n          name: 'Öğle Yemeği 2',\r\n          description: '100g etli sebze yemeği, 1 porsiyon mercimek çorbası, 1 dilim tam tahıllı ekmek, 1 kase yoğurt',\r\n          calories: 500\r\n        },\r\n        {\r\n          name: 'Öğle Yemeği 3',\r\n          description: '1 porsiyon kuru fasulye, 1/2 porsiyon bulgur pilavı, 1 kase cacık, yeşil salata',\r\n          calories: 520\r\n        }\r\n      ],\r\n      dinner: [\r\n        {\r\n          name: 'Akşam Yemeği 1',\r\n          description: '150g ızgara balık, 1 orta boy haşlanmış patates, mevsim salata (zeytinyağlı, limon)',\r\n          calories: 450\r\n        },\r\n        {\r\n          name: 'Akşam Yemeği 2',\r\n          description: '100g köfte (az yağlı), 1/2 porsiyon bulgur pilavı, 1 kase yoğurt, mevsim salata',\r\n          calories: 480\r\n        },\r\n        {\r\n          name: 'Akşam Yemeği 3',\r\n          description: '1 porsiyon sebzeli tavuk sote, 1 kase çoban salata, 1 dilim tam tahıllı ekmek',\r\n          calories: 430\r\n        }\r\n      ],\r\n      snacks: [\r\n        {\r\n          name: 'Ara Öğün 1',\r\n          description: '1 adet orta boy meyve (elma, armut veya portakal) + 30g tuzsuz badem',\r\n          calories: 200\r\n        },\r\n        {\r\n          name: 'Ara Öğün 2',\r\n          description: '1 kase yarım yağlı yoğurt + 1 tatlı kaşığı bal + 1 yemek kaşığı yulaf',\r\n          calories: 180\r\n        },\r\n        {\r\n          name: 'Ara Öğün 3',\r\n          description: '1 avuç karışık kuruyemiş (badem, ceviz, fındık)',\r\n          calories: 170\r\n        },\r\n        {\r\n          name: 'Ara Öğün 4',\r\n          description: '2 adet tam tahıllı bisküvi + 1 bardak yarım yağlı ayran',\r\n          calories: 150\r\n        },\r\n        {\r\n          name: 'Ara Öğün 5',\r\n          description: '1 küçük kase mevsim meyveleri + 30g çekirdeksiz kuru üzüm',\r\n          calories: 160\r\n        }\r\n      ]\r\n    };\r\n    \r\n    // Öğün planı oluştur\r\n    const mealPlan = {};\r\n    const distributionPlan = mealDistribution[mealCount.toString()];\r\n    \r\n    Object.keys(distributionPlan).forEach(meal => {\r\n      const mealCalories = Math.round(targetCalories * distributionPlan[meal]);\r\n      \r\n      if (meal === 'breakfast') {\r\n        // Rastgele bir kahvaltı seç\r\n        const selectedMeal = turkishFoods.breakfast[Math.floor(Math.random() * turkishFoods.breakfast.length)];\r\n        mealPlan[meal] = {\r\n          ...selectedMeal,\r\n          targetCalories: mealCalories\r\n        };\r\n      } else if (meal === 'lunch') {\r\n        // Rastgele bir öğle yemeği seç\r\n        const selectedMeal = turkishFoods.lunch[Math.floor(Math.random() * turkishFoods.lunch.length)];\r\n        mealPlan[meal] = {\r\n          ...selectedMeal,\r\n          targetCalories: mealCalories\r\n        };\r\n      } else if (meal === 'dinner') {\r\n        // Rastgele bir akşam yemeği seç\r\n        const selectedMeal = turkishFoods.dinner[Math.floor(Math.random() * turkishFoods.dinner.length)];\r\n        mealPlan[meal] = {\r\n          ...selectedMeal,\r\n          targetCalories: mealCalories\r\n        };\r\n      } else {\r\n        // Ara öğün\r\n        const snackIndex = Math.floor(Math.random() * turkishFoods.snacks.length);\r\n        mealPlan[meal] = {\r\n          ...turkishFoods.snacks[snackIndex],\r\n          targetCalories: mealCalories\r\n        };\r\n      }\r\n    });\r\n    \r\n    return mealPlan;\r\n  };\r\n\r\n  const generateDietPlan = (userInfo) => {\r\n    setIsLoading(true);\r\n    try {\r\n      // BMR (Bazal Metabolizma Hızı) Hesaplama\r\n      const bmr = calculateBMR(userInfo);\r\n      \r\n      // TDEE (Toplam Günlük Enerji Harcaması) Hesaplama\r\n      const tdee = calculateTDEE(bmr, userInfo.activityLevel);\r\n      \r\n      // Hedef Kalori Hesaplama\r\n      const targetCalories = calculateTargetCalories(tdee, userInfo.dietGoal);\r\n      \r\n      // Makro Besin Dağılımı\r\n      const macroDistribution = generateMacroDistribution(targetCalories, userInfo.dietGoal);\r\n      \r\n      // Öğün Planı\r\n      const mealPlan = generateTurkishMealPlan(targetCalories, macroDistribution, userInfo.mealCount || 3);\r\n      \r\n      // Diyet Planı Objesi\r\n      const generatedPlan = {\r\n        stats: {\r\n          bmr: bmr,\r\n          tdee: tdee,\r\n          targetCalories: targetCalories\r\n        },\r\n        macros: macroDistribution,\r\n        mealPlan: mealPlan,\r\n        waterIntake: calculateWaterIntake(userInfo.weight)\r\n      };\r\n      \r\n      setDietPlan(generatedPlan);\r\n    } catch (error) {\r\n      console.error(\"Diyet planı oluşturulurken hata:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatDate = (date) => {\r\n    if (!date) return '';\r\n    return date.toLocaleDateString('tr-TR', { \r\n      year: 'numeric', \r\n      month: 'long', \r\n      day: 'numeric' \r\n    });\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"text-center py-10\">\r\n        <div className=\"inline-block animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-diet-green\"></div>\r\n        <p className=\"mt-3 text-gray-600\">Diyet planınız oluşturuluyor...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!dietPlan) {\r\n    return (\r\n      <div className=\"text-center py-10\">\r\n        <p className=\"text-red-500\">Diyet planı oluşturulamadı. Lütfen daha sonra tekrar deneyin.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\r\n      <h2 className=\"text-2xl font-bold text-diet-green mb-6 text-center\">Kişiselleştirilmiş Beslenme Planınız</h2>\r\n      \r\n      <div className=\"mb-6\">\r\n        <div className=\"flex justify-center space-x-4 border-b\">\r\n          <button \r\n            className={`py-2 px-4 font-medium ${activeTab === 'overview' ? 'text-diet-green border-b-2 border-diet-green' : 'text-gray-500'}`}\r\n            onClick={() => setActiveTab('overview')}\r\n          >\r\n            Genel Bilgiler\r\n          </button>\r\n          <button \r\n            className={`py-2 px-4 font-medium ${activeTab === 'meals' ? 'text-diet-green border-b-2 border-diet-green' : 'text-gray-500'}`}\r\n            onClick={() => setActiveTab('meals')}\r\n          >\r\n            Beslenme Planı\r\n          </button>\r\n          <button \r\n            className={`py-2 px-4 font-medium ${activeTab === 'tips' ? 'text-diet-green border-b-2 border-diet-green' : 'text-gray-500'}`}\r\n            onClick={() => setActiveTab('tips')}\r\n          >\r\n            Beslenme Önerileri\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {activeTab === 'overview' && (\r\n        <div>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <h3 className=\"font-bold text-diet-green text-lg mb-2\">Günlük Kalori İhtiyacı</h3>\r\n              <p className=\"text-2xl font-bold text-gray-800\">{dietPlan.stats.targetCalories} kcal</p>\r\n              <div className=\"text-sm text-gray-500 mt-1\">\r\n                <p>Bazal Metabolizma: {dietPlan.stats.bmr} kcal</p>\r\n                <p>Toplam Enerji İhtiyacı: {dietPlan.stats.tdee} kcal</p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <h3 className=\"font-bold text-diet-green text-lg mb-2\">Su Tüketimi</h3>\r\n              <p className=\"text-2xl font-bold text-gray-800\">{dietPlan.waterIntake.min}-{dietPlan.waterIntake.max} litre/gün</p>\r\n              <div className=\"text-sm text-gray-500 mt-1\">\r\n                <p>Yaklaşık: {dietPlan.waterIntake.cups} bardak su</p>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <h3 className=\"font-bold text-diet-green text-lg mb-2\">Makro Besin Dağılımı</h3>\r\n              <div className=\"flex justify-between items-center\">\r\n                <div className=\"text-center\">\r\n                  <p className=\"text-sm text-gray-500\">Protein</p>\r\n                  <p className=\"font-bold text-gray-800\">{dietPlan.macros.protein.grams}g</p>\r\n                  <p className=\"text-xs text-gray-500\">%{dietPlan.macros.protein.percentage}</p>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <p className=\"text-sm text-gray-500\">Karbonhidrat</p>\r\n                  <p className=\"font-bold text-gray-800\">{dietPlan.macros.carbs.grams}g</p>\r\n                  <p className=\"text-xs text-gray-500\">%{dietPlan.macros.carbs.percentage}</p>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <p className=\"text-sm text-gray-500\">Yağ</p>\r\n                  <p className=\"font-bold text-gray-800\">{dietPlan.macros.fat.grams}g</p>\r\n                  <p className=\"text-xs text-gray-500\">%{dietPlan.macros.fat.percentage}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"mb-6\">\r\n            <h3 className=\"font-bold text-diet-green text-xl mb-4\">Beslenme Önerileri</h3>\r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <ul className=\"list-disc list-inside space-y-2\">\r\n                <li>Günde en az 2-3 litre su içmeye özen gösterin.</li>\r\n                <li>Öğünlerinizi düzenli saatlerde tüketin ve öğün atlamayın.</li>\r\n                <li>Besinleri iyice çiğneyerek yavaş yavaş tüketin.</li>\r\n                <li>Yemeklerinizi pişirirken kızartma yerine ızgara, haşlama, fırında pişirme gibi sağlıklı pişirme yöntemlerini tercih edin.</li>\r\n                <li>Tuz tüketiminizi sınırlandırın ve yemeklerinizde baharat kullanmayı tercih edin.</li>\r\n                <li>Rafine şeker tüketimini azaltın, tatlı ihtiyacınız için meyve gibi doğal tatlıları tercih edin.</li>\r\n                <li>Haftada en az 3-4 kez 30-45 dakikalık egzersiz yapın.</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {activeTab === 'meals' && (\r\n        <div>\r\n          <h3 className=\"font-bold text-diet-green text-xl mb-4\">Günlük Beslenme Planı</h3>\r\n          \r\n          <div className=\"space-y-6\">\r\n            {Object.keys(dietPlan.mealPlan).map(meal => {\r\n              const mealInfo = dietPlan.mealPlan[meal];\r\n              let mealTitle = '';\r\n              \r\n              switch(meal) {\r\n                case 'breakfast':\r\n                  mealTitle = 'Kahvaltı';\r\n                  break;\r\n                case 'lunch':\r\n                  mealTitle = 'Öğle Yemeği';\r\n                  break;\r\n                case 'dinner':\r\n                  mealTitle = 'Akşam Yemeği';\r\n                  break;\r\n                default:\r\n                  const snackNumber = meal.replace('snack', '');\r\n                  mealTitle = `Ara Öğün ${snackNumber}`;\r\n              }\r\n              \r\n              return (\r\n                <div key={meal} className=\"bg-gray-50 p-4 rounded-lg\">\r\n                  <div className=\"flex justify-between items-center mb-2\">\r\n                    <h4 className=\"font-bold text-gray-800\">{mealTitle}</h4>\r\n                    <span className=\"text-sm text-gray-500\">Hedef: {mealInfo.targetCalories} kcal</span>\r\n                  </div>\r\n                  <p className=\"text-gray-700\">{mealInfo.description}</p>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          \r\n          <div className=\"mt-6 text-center\">\r\n            <button \r\n              className=\"bg-diet-green text-white py-2 px-6 rounded-lg hover:bg-green-600 transition\"\r\n              onClick={() => generateDietPlan(userInfo)}\r\n            >\r\n              Farklı Öneriler Al\r\n            </button>\r\n            <p className=\"text-sm text-gray-500 mt-2\">\r\n              Beğenmediğiniz yemekler için alternatif öneriler almak için tıklayın.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {activeTab === 'tips' && (\r\n        <div>\r\n          <h3 className=\"font-bold text-diet-green text-xl mb-4\">Beslenme Önerileri</h3>\r\n          \r\n          <div className=\"space-y-6\">\r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <h4 className=\"font-bold text-gray-800 mb-2\">Protein Kaynakları</h4>\r\n              <p className=\"text-gray-700 mb-2\">Günlük protein ihtiyacınız: <span className=\"font-bold\">{dietPlan.macros.protein.grams}g</span></p>\r\n              <ul className=\"list-disc list-inside space-y-1\">\r\n                <li>Tavuk göğsü (100g) - 24g protein</li>\r\n                <li>Yumurta (1 adet) - 6g protein</li>\r\n                <li>Yoğurt (1 kase) - 10g protein</li>\r\n                <li>Kırmızı et (100g) - 20g protein</li>\r\n                <li>Balık (100g) - 22g protein</li>\r\n                <li>Mercimek (100g pişmiş) - 9g protein</li>\r\n                <li>Peynir (30g) - 7g protein</li>\r\n              </ul>\r\n            </div>\r\n            \r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <h4 className=\"font-bold text-gray-800 mb-2\">Sağlıklı Karbonhidrat Kaynakları</h4>\r\n              <p className=\"text-gray-700 mb-2\">Günlük karbonhidrat ihtiyacınız: <span className=\"font-bold\">{dietPlan.macros.carbs.grams}g</span></p>\r\n              <ul className=\"list-disc list-inside space-y-1\">\r\n                <li>Tam tahıllı ekmek (1 dilim) - 15g karbonhidrat</li>\r\n                <li>Yulaf ezmesi (1/2 kase) - 27g karbonhidrat</li>\r\n                <li>Bulgur (1/2 kase pişmiş) - 17g karbonhidrat</li>\r\n                <li>Kahverengi pirinç (1/2 kase pişmiş) - 22g karbonhidrat</li>\r\n                <li>Patates (1 orta boy) - 30g karbonhidrat</li>\r\n                <li>Muz (1 adet) - 27g karbonhidrat</li>\r\n                <li>Kuru baklagiller (100g pişmiş) - 20g karbonhidrat</li>\r\n              </ul>\r\n            </div>\r\n            \r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <h4 className=\"font-bold text-gray-800 mb-2\">Sağlıklı Yağ Kaynakları</h4>\r\n              <p className=\"text-gray-700 mb-2\">Günlük yağ ihtiyacınız: <span className=\"font-bold\">{dietPlan.macros.fat.grams}g</span></p>\r\n              <ul className=\"list-disc list-inside space-y-1\">\r\n                <li>Zeytinyağı (1 yemek kaşığı) - 14g yağ</li>\r\n                <li>Avokado (1/2 adet) - 15g yağ</li>\r\n                <li>Ceviz (30g) - 19g yağ</li>\r\n                <li>Badem (30g) - 15g yağ</li>\r\n                <li>Fındık (30g) - 18g yağ</li>\r\n                <li>Keten tohumu (1 yemek kaşığı) - 4g yağ</li>\r\n                <li>Yumurta sarısı (1 adet) - 5g yağ</li>\r\n              </ul>\r\n            </div>\r\n            \r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <h4 className=\"font-bold text-gray-800 mb-2\">Dışarıda Yemek Yerken</h4>\r\n              <ul className=\"list-disc list-inside space-y-1\">\r\n                <li>Izgara et, tavuk veya balık tercih edin.</li>\r\n                <li>Salata veya sebze garnitürü isteyin.</li>\r\n                <li>Sulu ve yağlı soslardan kaçının.</li>\r\n                <li>Tam tahıllı ekmek/bulgur/pirinç gibi seçenekleri tercih edin.</li>\r\n                <li>Tatlı yerine meyve veya sade Türk kahvesi tercih edin.</li>\r\n                <li>Alkollü içecekler yerine su, ayran veya şekersiz içecekler için.</li>\r\n              </ul>\r\n            </div>\r\n            \r\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n              <h4 className=\"font-bold text-gray-800 mb-2\">Alternatif Ara Öğün Fikirleri</h4>\r\n              <ul className=\"list-disc list-inside space-y-1\">\r\n                <li>Yarım yağlı lor peyniri (4 yemek kaşığı) + salatalık/domates</li>\r\n                <li>Yarım yağlı ayran (1 bardak) + tam tahıllı kraker (3-4 adet)</li>\r\n                <li>Ceviz, badem, fındık karışımı (1 avuç)</li>\r\n                <li>Mevsim meyveleri (1 porsiyon)</li>\r\n                <li>Ev yapımı kefir (1 su bardağı) + tarçın</li>\r\n                <li>Tam tahıllı ekmek (1 dilim) + 1 tatlı kaşığı pekmez</li>\r\n                <li>Labne peynir (2 yemek kaşığı) + salatalık</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DietPlanGenerator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}