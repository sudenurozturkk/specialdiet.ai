{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\specialdiet.ai\\\\diyet-dostu-web\\\\client\\\\src\\\\components\\\\Profile.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport ExerciseCard from './ExerciseCard';\nimport '../styles/global.css';\nconst Profile = () => {\n  const [userData, setUserData] = useState(null);\n  const [activeTab, setActiveTab] = useState('bilgiler');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [newNote, setNewNote] = useState('');\n  const [newWeight, setNewWeight] = useState('');\n  const [diseases, setDiseases] = useState('');\n  const [medications, setMedications] = useState('');\n  const [healthInfoEditing, setHealthInfoEditing] = useState(false);\n  const [personalInfoEditing, setPersonalInfoEditing] = useState(false);\n  const [height, setHeight] = useState('');\n  const [weight, setWeight] = useState('');\n  const [age, setAge] = useState('');\n  const [gender, setGender] = useState('');\n  const [name, setName] = useState('');\n  const [goal, setGoal] = useState('');\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const tooltipRef = useRef(null); // tooltipRef eklendi\n\n  useEffect(() => {\n    // localStorage'da kaydedilmiş userData'ya öncelik ver\n    const cachedUserData = localStorage.getItem('userData');\n    if (cachedUserData) {\n      try {\n        const parsedData = JSON.parse(cachedUserData);\n        console.log('localStorage\\'dan yüklenen kullanıcı verileri:', parsedData);\n\n        // weightLogs'un dizi olduğundan emin olalım\n        if (parsedData) {\n          if (!parsedData.weightLogs) {\n            parsedData.weightLogs = [];\n          } else if (!Array.isArray(parsedData.weightLogs)) {\n            parsedData.weightLogs = [parsedData.weightLogs];\n          }\n        }\n        setUserData(parsedData);\n        if (parsedData.info) {\n          setDiseases(parsedData.info.diseases || '');\n          setMedications(parsedData.info.medications || '');\n          setHeight(parsedData.info.height || '');\n          setWeight(parsedData.info.weight || '');\n          setAge(parsedData.info.age || '');\n          setGender(parsedData.info.gender || '');\n        }\n        setName(parsedData.name || '');\n        setGoal(parsedData.goal || '');\n        console.log('Önbellekten kullanıcı verileri yüklendi:', parsedData);\n      } catch (error) {\n        console.error(\"Önbellek verisi ayrıştırılırken hata:\", error);\n        localStorage.removeItem('userData'); // Bozuk veriyi temizle\n      }\n    }\n\n    // Her durumda güncel verileri de sunucudan al\n    fetchUserData();\n  }, []);\n  useEffect(() => {\n    var _userData$weightLogs;\n    if (activeTab === 'bilgiler' && (userData === null || userData === void 0 ? void 0 : (_userData$weightLogs = userData.weightLogs) === null || _userData$weightLogs === void 0 ? void 0 : _userData$weightLogs.length) > 1) {\n      const setupTooltip = () => {\n        const tooltip = document.querySelector('.profile-tab .pro-chart-tooltip');\n        if (!tooltip) {\n          var _document$querySelect;\n          // Tooltip yoksa oluştur\n          const newTooltip = document.createElement('div');\n          newTooltip.className = 'pro-chart-tooltip';\n          newTooltip.style.zIndex = '5'; // Düşük z-index değeri\n          newTooltip.innerHTML = `\n            <div class=\"pro-chart-tooltip-value\"></div>\n            <div class=\"pro-chart-tooltip-date\"></div>\n          `;\n          (_document$querySelect = document.querySelector('.profile-tab .pro-chart-container')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.appendChild(newTooltip);\n        }\n\n        // Noktalar için olay dinleyicileri ekle\n        const dots = document.querySelectorAll('.profile-tab .pro-chart-dot');\n        dots.forEach(dot => {\n          dot.addEventListener('mouseover', function () {\n            const tooltip = document.querySelector('.profile-tab .pro-chart-tooltip');\n            if (tooltip) {\n              var _document$querySelect2;\n              const weight = this.getAttribute('data-weight');\n              const date = this.getAttribute('data-date');\n              tooltip.querySelector('.pro-chart-tooltip-value').textContent = `${weight} kg`;\n              tooltip.querySelector('.pro-chart-tooltip-date').textContent = date;\n\n              // Tooltip pozisyonunu ayarla\n              const rect = this.getBoundingClientRect();\n              const container = (_document$querySelect2 = document.querySelector('.profile-tab .pro-chart-container')) === null || _document$querySelect2 === void 0 ? void 0 : _document$querySelect2.getBoundingClientRect();\n              if (container) {\n                // 81. satırdaki hata düzeltildi: container varsa kullan\n                tooltip.style.left = `${rect.left - container.left + rect.width / 2}px`;\n                tooltip.style.top = `${rect.top - container.top}px`;\n              }\n              tooltip.style.opacity = '1';\n            }\n          });\n          dot.addEventListener('mouseout', function () {\n            const tooltip = document.querySelector('.profile-tab .pro-chart-tooltip');\n            if (tooltip) {\n              tooltip.style.opacity = '0';\n            }\n          });\n        });\n      };\n\n      // Grafik yüklendikten sonra tooltip'i ayarla\n      setTimeout(setupTooltip, 500);\n    }\n  }, [activeTab, userData]);\n  const fetchUserData = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.error('Oturum token bulunamadı');\n        setError('Oturum zaman aşımına uğradı. Lütfen tekrar giriş yapın.');\n        setLoading(false);\n        return;\n      }\n      console.log('Sunucudan profil verileri alınıyor...');\n      try {\n        const response = await axios.get('http://localhost:5000/api/profile', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          timeout: 5000 // 5 saniye timeout ekle\n        });\n        console.log(\"Sunucudan alınan profil verileri:\", response.data);\n        if (response.data) {\n          const updatedUserData = response.data;\n\n          // Kilo geçmişi verilerinin diziden oluştuğundan emin olalım\n          if (!updatedUserData.weightLogs) {\n            updatedUserData.weightLogs = [];\n          } else if (!Array.isArray(updatedUserData.weightLogs)) {\n            console.warn(\"weightLogs bir dizi değil, düzeltiliyor:\", updatedUserData.weightLogs);\n            updatedUserData.weightLogs = [updatedUserData.weightLogs];\n          }\n\n          // Merging: localStorage'da olup sunucuda olmayan kilo kayıtları\n          const cachedData = localStorage.getItem('userData');\n          if (cachedData) {\n            try {\n              const parsedCache = JSON.parse(cachedData);\n\n              // Eğer localStorage'da weightLogs varsa ve sunucudan gelen verilerden fazla kayıt içeriyorsa\n              if (parsedCache.weightLogs && Array.isArray(parsedCache.weightLogs) && parsedCache.weightLogs.length > updatedUserData.weightLogs.length) {\n                console.log(\"localStorage'daki kilo kayıtları sunucudakinden fazla, birleştiriliyor\");\n\n                // Sunucudaki kayıtların ID'lerini tut\n                const serverLogIds = updatedUserData.weightLogs.map(log => log.id);\n\n                // localStorage'da olup sunucuda olmayan kayıtları ekle\n                const additionalLogs = parsedCache.weightLogs.filter(log => !serverLogIds.includes(log.id));\n                if (additionalLogs.length > 0) {\n                  console.log(\"Sunucuda olmayan, localStorage'dan eklenen kayıtlar:\", additionalLogs);\n                  updatedUserData.weightLogs = [...updatedUserData.weightLogs, ...additionalLogs];\n                }\n              }\n            } catch (e) {\n              console.error(\"localStorage'daki verileri birleştirirken hata:\", e);\n            }\n          }\n\n          // Kilo kayıtları için benzersiz ID'leri kontrol et ve tarihe göre sırala\n          updatedUserData.weightLogs = updatedUserData.weightLogs.filter((log, index, self) => index === self.findIndex(l => l.id === log.id)).sort((a, b) => new Date(b.date) - new Date(a.date));\n\n          // Önce localStorage'a kaydet\n          localStorage.setItem('userData', JSON.stringify(updatedUserData));\n          console.log('Kullanıcı verileri localStorage\\'a kaydedildi');\n\n          // Sonra state'i güncelle\n          setUserData(updatedUserData);\n\n          // Bilgileri state'e aktar\n          if (updatedUserData.info) {\n            setDiseases(updatedUserData.info.diseases || '');\n            setMedications(updatedUserData.info.medications || '');\n            setHeight(updatedUserData.info.height || '');\n            setWeight(updatedUserData.info.weight || '');\n            setAge(updatedUserData.info.age || '');\n            setGender(updatedUserData.info.gender || '');\n          }\n          setName(updatedUserData.name || '');\n          setGoal(updatedUserData.goal || '');\n          console.log('Form state değerleri güncellendi');\n        } else {\n          console.error('API yanıtında veri yok veya beklenmeyen format');\n          // LocalStorage'daki verileri koruyalım, hata mesajını göstermeyelim\n        }\n      } catch (apiError) {\n        console.error('API isteği başarısız:', apiError);\n        // Bağlantı hatası durumunda localStorage'daki verileri kullan\n        console.log(\"Sunucu bağlantısı başarısız, localStorage'daki veriler korunacak\");\n        // Hata mesajı göstermiyoruz çünkü localStorage'daki verileri kullanacağız\n      }\n    } catch (error) {\n      console.error('Profil bilgileri yüklenirken hata:', error);\n\n      // Hata detaylarını göster\n      if (error.response) {\n        console.error('Sunucu yanıtı:', error.response.data);\n        console.error('Durum kodu:', error.response.status);\n      } else if (error.request) {\n        console.error('Yanıt alınamadı:', error.request);\n      }\n      setError('Profil bilgileri yüklenemedi. Lütfen ağ bağlantınızı kontrol edin ve daha sonra tekrar deneyin.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleToggleExercise = async exercise => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Oturum zaman aşımına uğradı. Lütfen tekrar giriş yapın.');\n      }\n\n      // İyimser UI güncellemesi\n      const updatedExercises = userData.exercisePlan.map(ex => {\n        if (ex.id === exercise.id) {\n          return {\n            ...ex,\n            completed: !ex.completed\n          };\n        }\n        return ex;\n      });\n      const optimisticUserData = {\n        ...userData,\n        exercisePlan: updatedExercises\n      };\n      setUserData(optimisticUserData);\n      localStorage.setItem('userData', JSON.stringify(optimisticUserData));\n      await axios.post('http://localhost:5000/api/profile/mark-complete', {\n        type: 'exercise',\n        item: exercise,\n        completed: !exercise.completed\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Başarılı işlem sonrası sunucudan güncel verileri al\n      fetchUserData();\n    } catch (error) {\n      console.error('Egzersiz durumu güncellenirken hata:', error);\n      setError('Egzersiz durumu güncellenemedi. Lütfen tekrar deneyin.');\n      fetchUserData(); // Hata durumunda orijinal verileri geri yükle\n    }\n  };\n  const handleToggleMeal = async (day, meal) => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Oturum zaman aşımına uğradı. Lütfen tekrar giriş yapın.');\n      }\n\n      // İyimser UI güncellemesi\n      const updatedDietPlan = {\n        ...userData.dietPlan\n      };\n      if (updatedDietPlan[day]) {\n        updatedDietPlan[day] = updatedDietPlan[day].map(m => {\n          if (m.name === meal.name) {\n            return {\n              ...m,\n              completed: !m.completed\n            };\n          }\n          return m;\n        });\n      }\n      const optimisticUserData = {\n        ...userData,\n        dietPlan: updatedDietPlan\n      };\n      setUserData(optimisticUserData);\n      localStorage.setItem('userData', JSON.stringify(optimisticUserData));\n      await axios.post('http://localhost:5000/api/profile/mark-complete', {\n        type: 'meal',\n        day,\n        meal: meal.name,\n        completed: !meal.completed\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Başarılı işlem sonrası sunucudan güncel verileri al\n      fetchUserData();\n    } catch (error) {\n      console.error('Yemek durumu güncellenirken hata:', error);\n      setError('Yemek durumu güncellenemedi. Lütfen tekrar deneyin.');\n      fetchUserData(); // Hata durumunda orijinal verileri geri yükle\n    }\n  };\n  const handleToggleNote = async note => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Oturum zaman aşımına uğradı. Lütfen tekrar giriş yapın.');\n      }\n\n      // İyimser UI güncellemesi\n      const updatedNotes = userData.notes.map(n => {\n        if (n.id === note.id) {\n          return {\n            ...n,\n            completed: !n.completed\n          };\n        }\n        return n;\n      });\n      const optimisticUserData = {\n        ...userData,\n        notes: updatedNotes\n      };\n      setUserData(optimisticUserData);\n      localStorage.setItem('userData', JSON.stringify(optimisticUserData));\n      await axios.post('http://localhost:5000/api/profile/mark-complete', {\n        type: 'note',\n        note,\n        completed: !note.completed\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Başarılı işlem sonrası sunucudan güncel verileri al\n      fetchUserData();\n    } catch (error) {\n      console.error('Not durumu güncellenirken hata:', error);\n      setError('Not durumu güncellenemedi. Lütfen tekrar deneyin.');\n      fetchUserData(); // Hata durumunda orijinal verileri geri yükle\n    }\n  };\n  const handleAddNote = async e => {\n    e.preventDefault();\n    if (!newNote.trim()) return;\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Oturum zaman aşımına uğradı. Lütfen tekrar giriş yapın.');\n      }\n\n      // Yeni not oluştur\n      const tempId = Date.now(); // Geçici ID\n      const newNoteObj = {\n        id: tempId,\n        text: newNote,\n        date: new Date().toISOString(),\n        completed: false\n      };\n\n      // İyimser UI güncellemesi\n      const updatedNotes = [...(userData.notes || []), newNoteObj];\n      const optimisticUserData = {\n        ...userData,\n        notes: updatedNotes\n      };\n      setUserData(optimisticUserData);\n      localStorage.setItem('userData', JSON.stringify(optimisticUserData));\n      setNewNote(''); // Input alanını temizle\n\n      // API çağrısı\n      const response = await axios.post('http://localhost:5000/api/profile/update', {\n        type: 'note',\n        text: newNote\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Not ekleme yanıtı:\", response.data);\n\n      // Başarı mesajı göster\n      setSuccessMessage('Not başarıyla eklendi.');\n      setShowSuccessMessage(true);\n      setTimeout(() => {\n        setShowSuccessMessage(false);\n      }, 3000);\n\n      // Güncel verileri al\n      fetchUserData();\n    } catch (error) {\n      console.error('Not eklenirken hata:', error);\n      setError('Not eklenemedi. Lütfen tekrar deneyin.');\n      setNewNote(newNote); // Hata durumunda girilen notu geri al\n      fetchUserData(); // Orijinal verileri geri yükle\n    }\n  };\n  const handleAddWeight = async e => {\n    e.preventDefault();\n    if (!newWeight.trim()) return;\n    try {\n      setIsLoading(true); // Yükleniyor durumunu göster\n\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Oturum zaman aşımına uğradı. Lütfen tekrar giriş yapın.');\n      }\n\n      // Yeni kilo kaydı oluştur\n      const newWeightValue = parseFloat(newWeight);\n      const newWeightLog = {\n        id: Date.now().toString(),\n        // Benzersiz bir ID\n        weight: newWeightValue,\n        date: new Date().toISOString()\n      };\n      console.log(\"Eklenecek yeni kilo kaydı:\", newWeightLog);\n\n      // Mevcut userData'yı güncelleyelim\n      let currentUserData = {\n        ...userData\n      };\n\n      // weightLogs dizisinin varlığını kontrol et\n      if (!currentUserData.weightLogs) {\n        currentUserData.weightLogs = [];\n      } else if (!Array.isArray(currentUserData.weightLogs)) {\n        // Eğer dizi değilse dizi haline getir\n        currentUserData.weightLogs = [currentUserData.weightLogs];\n      }\n\n      // Yeni kilo kaydını ekle\n      currentUserData.weightLogs.push(newWeightLog);\n\n      // Mevcut kilo bilgisini de güncelle\n      if (!currentUserData.info) {\n        currentUserData.info = {};\n      }\n      currentUserData.info.weight = newWeightValue;\n      console.log(\"Güncellenecek kullanıcı verisi:\", currentUserData);\n\n      // Önce yerel state'i güncelle\n      setUserData(currentUserData);\n      setWeight(newWeightValue.toString());\n\n      // localStorage'a kaydet\n      localStorage.setItem('userData', JSON.stringify(currentUserData));\n      console.log(\"Kullanıcı verileri localStorage'a kaydedildi\");\n\n      // Input alanını temizle\n      setNewWeight('');\n\n      // Sunucuya gönder\n      try {\n        const response = await axios.post('http://localhost:5000/api/profile/update', {\n          type: 'weight',\n          weight: newWeightValue\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"Sunucu yanıtı:\", response.data);\n        if (response.data && response.data.success) {\n          console.log(\"Kilo kaydı sunucuya başarıyla kaydedildi\");\n        } else {\n          console.warn(\"Sunucu başarı bildirdi ancak tam istenilen yanıt formatında değil:\", response.data);\n        }\n      } catch (apiError) {\n        console.error(\"Sunucu API hatası:\", apiError);\n        console.log(\"Fakat yerel veriler güncellendi, frontend işleyişi devam edecek\");\n        // Sunucu hatasını göster\n        // setError('Sunucuya bağlanırken bir hata oluştu, ancak verileriniz yerel olarak kaydedildi.');\n        // setTimeout(() => setError(''), 5000);\n      }\n\n      // Başarı mesajı göstermiyoruz\n      // setSuccessMessage('Kilo kaydınız başarıyla eklendi.');\n      // setShowSuccessMessage(true);\n\n      // setTimeout(() => {\n      //   setShowSuccessMessage(false);\n\n      //   // Hemen kilo takibi sekmesine geçiş yapalım\n      //   setActiveTab('kilo');\n      // }, 2000);\n\n      // Doğrudan kilo takibi sekmesine geçiş yapalım\n      setActiveTab('kilo');\n    } catch (error) {\n      console.error('Kilo eklenirken hata:', error);\n      setError('Kilo eklenemedi: ' + error.message);\n    } finally {\n      setIsLoading(false); // Yükleniyor durumunu kapat\n    }\n  };\n  const handleSaveHealthInfo = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Oturum zaman aşımına uğradı. Lütfen tekrar giriş yapın.');\n      }\n\n      // İyimser UI güncellemesi\n      const optimisticUserData = {\n        ...userData,\n        info: {\n          ...userData.info,\n          diseases: diseases,\n          medications: medications\n        }\n      };\n      setUserData(optimisticUserData);\n      localStorage.setItem('userData', JSON.stringify(optimisticUserData));\n      setHealthInfoEditing(false); // Düzenleme modunu kapat\n\n      // API çağrısı\n      const response = await axios.post('http://localhost:5000/api/profile/update', {\n        type: 'health',\n        diseases: diseases,\n        medications: medications\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Sağlık bilgileri güncelleme yanıtı:\", response.data);\n\n      // Başarı mesajı göster\n      setSuccessMessage('Sağlık bilgileriniz başarıyla güncellendi.');\n      setShowSuccessMessage(true);\n      setTimeout(() => {\n        setShowSuccessMessage(false);\n      }, 3000);\n\n      // Güncel verileri al\n      fetchUserData();\n    } catch (error) {\n      console.error('Sağlık bilgileri güncellenirken hata:', error);\n      setError('Sağlık bilgileriniz güncellenemedi. Lütfen tekrar deneyin.');\n      setHealthInfoEditing(true); // Hata durumunda düzenleme modunu aktif tut\n      fetchUserData(); // Orijinal verileri geri yükle\n    }\n  };\n  const handleDeleteNote = async note => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Oturum zaman aşımına uğradı. Lütfen tekrar giriş yapın.');\n      }\n\n      // Not ID'sini konsola yazdır (debug için)\n      console.log(\"Silinecek not ID:\", note.id);\n      console.log(\"Tüm not objesi:\", note);\n\n      // Not ID'sinin geçerli olduğunu kontrol et\n      if (!note.id) {\n        setError('Not ID bulunamadı. Lütfen yenileyin ve tekrar deneyin.');\n        return;\n      }\n\n      // İyimser UI güncellemesi\n      const filteredNotes = userData.notes.filter(n => n.id !== note.id);\n      const optimisticUserData = {\n        ...userData,\n        notes: filteredNotes\n      };\n      setUserData(optimisticUserData);\n      localStorage.setItem('userData', JSON.stringify(optimisticUserData));\n      try {\n        // Not silme API çağrısı\n        const response = await axios.post('http://localhost:5000/api/profile/delete-note', {\n          noteId: note.id\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"Not silme yanıtı:\", response.data);\n\n        // Başarı mesajı göster\n        setSuccessMessage('Not başarıyla silindi.');\n        setShowSuccessMessage(true);\n        setTimeout(() => setShowSuccessMessage(false), 3000);\n      } catch (apiError) {\n        console.error('Not silme API hatası:', apiError);\n\n        // API hatası olsa bile UI'da notu kaldır (kullanıcı deneyimi için)\n        // Arka planda yeniden senkronize etmek için sunucudan verileri al\n        fetchUserData();\n\n        // Kullanıcıya bildirim göster\n        setError('Sunucu hatası: Not silinirken bir problem oluştu, ancak notunuz yerel olarak kaldırıldı.');\n      }\n    } catch (error) {\n      console.error('Not silme genel hatası:', error);\n      fetchUserData(); // Verileri yeniden al\n      setError('Not silinirken bir hata oluştu. Lütfen tekrar deneyin.');\n    }\n  };\n  const handleSavePersonalInfo = async e => {\n    e.preventDefault();\n    try {\n      setIsLoading(true); // Yükleme göstergesi ekle\n\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Oturum zaman aşımına uğradı. Lütfen tekrar giriş yapın.');\n      }\n\n      // Mevcut durumu loglama\n      console.log(\"Güncellenecek değerler:\", {\n        name,\n        goal,\n        height,\n        weight,\n        age,\n        gender\n      });\n\n      // Form verilerini hazırla, boş değerleri güvenli şekilde işle\n      const updateData = {\n        type: 'personal',\n        name: name.trim() || undefined,\n        goal: goal || undefined,\n        height: height ? height.toString() : undefined,\n        weight: weight ? weight.toString() : undefined,\n        age: age ? age.toString() : undefined,\n        gender: gender || undefined\n      };\n      console.log(\"Gönderilen profil verileri:\", updateData);\n\n      // İyimser UI güncellemesi\n      const optimisticUserData = {\n        ...userData,\n        name: name,\n        goal: goal,\n        info: {\n          ...userData.info,\n          height: height,\n          weight: weight,\n          age: age,\n          gender: gender\n        }\n      };\n\n      // State'i ve localStorage'ı güncelle\n      setUserData(optimisticUserData);\n      localStorage.setItem('userData', JSON.stringify(optimisticUserData));\n\n      // API isteği gönder\n      const response = await axios.post('http://localhost:5000/api/profile/update', updateData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(\"Sunucu yanıtı:\", response.data);\n\n      // API yanıtı başarılıysa\n      if (response.data && response.data.success) {\n        // Sunucudan güncel kullanıcı verilerini al\n        if (response.data.user) {\n          const updatedUserData = response.data.user;\n          setUserData(updatedUserData);\n          localStorage.setItem('userData', JSON.stringify(updatedUserData));\n          console.log('Kullanıcı verileri API yanıtından güncellendi');\n\n          // Bilgileri state'e aktar\n          if (updatedUserData.info) {\n            setDiseases(updatedUserData.info.diseases || '');\n            setMedications(updatedUserData.info.medications || '');\n            setHeight(updatedUserData.info.height || '');\n            setWeight(updatedUserData.info.weight || '');\n            setAge(updatedUserData.info.age || '');\n            setGender(updatedUserData.info.gender || '');\n          }\n          setName(updatedUserData.name || '');\n          setGoal(updatedUserData.goal || '');\n        } else {\n          // API güncellenen kullanıcı verilerini döndürmediyse, güncel verileri al\n          console.log('API güncellenen kullanıcı verilerini döndürmedi, fetchUserData çağrılıyor');\n          fetchUserData();\n        }\n        setPersonalInfoEditing(false);\n\n        // Başarı mesajı göster\n        setSuccessMessage('Bilgileriniz başarıyla güncellendi.');\n        setShowSuccessMessage(true);\n        setTimeout(() => {\n          setShowSuccessMessage(false);\n        }, 3000);\n      } else {\n        // API başarılı değilse\n        console.error('API yanıtı başarısız:', response.data);\n        setError('Bilgileriniz güncellenirken bir hata oluştu. Lütfen tekrar deneyin.');\n\n        // Güncel verileri al\n        fetchUserData();\n      }\n    } catch (error) {\n      console.error('Kişisel bilgiler güncellenirken hata:', error);\n\n      // Hata detaylarını göster\n      if (error.response) {\n        console.error('Sunucu yanıtı:', error.response.data);\n        console.error('Durum kodu:', error.response.status);\n      } else if (error.request) {\n        console.error('Yanıt alınamadı:', error.request);\n      }\n\n      // Hata durumunda güncel verileri al\n      fetchUserData();\n      setError('Bilgileriniz güncellenirken bir hata oluştu. Lütfen tekrar deneyin.');\n    } finally {\n      setIsLoading(false); // Yükleme göstergesini kaldır\n    }\n  };\n\n  // Kilo kaydını silme fonksiyonu\n  const handleDeleteWeight = async weightId => {\n    // Onay iste\n    if (!window.confirm('Bu kilo kaydını silmek istediğinizden emin misiniz?')) {\n      return;\n    }\n    try {\n      setIsLoading(true);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Oturum zaman aşımına uğradı. Lütfen tekrar giriş yapın.');\n      }\n      console.log(\"Silinecek kilo kaydı ID:\", weightId);\n\n      // Önce yerel verileri güncelleyelim\n      let currentUserData = {\n        ...userData\n      };\n\n      // weightLogs dizisinden ilgili kaydı çıkar\n      if (currentUserData.weightLogs && Array.isArray(currentUserData.weightLogs)) {\n        currentUserData.weightLogs = currentUserData.weightLogs.filter(log => log.id !== weightId);\n\n        // Eğer kalan son kayıt varsa, current weight'i güncelle\n        if (currentUserData.weightLogs.length > 0) {\n          // En son kayıt tarihi en yeni olan\n          const sortedLogs = [...currentUserData.weightLogs].sort((a, b) => new Date(b.date) - new Date(a.date));\n          const lastLog = sortedLogs[0];\n          if (!currentUserData.info) {\n            currentUserData.info = {};\n          }\n          currentUserData.info.weight = lastLog.weight;\n        }\n\n        // State'i ve localStorage'ı güncelle\n        setUserData(currentUserData);\n        if (currentUserData.info && currentUserData.info.weight) {\n          setWeight(currentUserData.info.weight.toString());\n        }\n        localStorage.setItem('userData', JSON.stringify(currentUserData));\n        console.log(\"Kilo kaydı yerel olarak silindi\");\n      }\n\n      // Sunucudan da silme işlemi\n      try {\n        const response = await axios.post('http://localhost:5000/api/profile/delete-weight', {\n          weightId: weightId\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"Sunucu silme yanıtı:\", response.data);\n        if (response.data && response.data.success) {\n          console.log(\"Kilo kaydı sunucudan başarıyla silindi\");\n        } else {\n          console.warn(\"Sunucudan silme başarılı mesajı alınamadı:\", response.data);\n        }\n      } catch (apiError) {\n        console.error(\"Sunucu silme API hatası:\", apiError);\n        // Hata mesajını da kaldıralım, kullanıcı sadece işlemin yapıldığını bilmek istiyor\n        // setError('Sunucudan silme sırasında bir hata oluştu, ancak yerel verilerden silindi.');\n        // setTimeout(() => setError(''), 5000);\n      }\n    } catch (error) {\n      console.error('Kilo kaydı silinirken hata:', error);\n      setError('Kilo kaydı silinemedi: ' + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const renderTabs = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tabs\",\n      style: {\n        position: 'relative',\n        zIndex: 9000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `tab ${activeTab === 'kisisel' ? 'active' : ''}`,\n      onClick: () => setActiveTab('kisisel'),\n      style: {\n        cursor: 'pointer !important',\n        position: 'relative',\n        zIndex: 9000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 9\n      }\n    }, \"Ki\\u015Fisel Bilgiler\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: `tab ${activeTab === 'kilo' ? 'active' : ''}`,\n      onClick: () => setActiveTab('kilo'),\n      style: {\n        cursor: 'pointer !important',\n        position: 'relative',\n        zIndex: 9000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 9\n      }\n    }, \"Kilo Takibi\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: `tab ${activeTab === 'hedef' ? 'active' : ''}`,\n      onClick: () => setActiveTab('hedef'),\n      style: {\n        cursor: 'pointer !important',\n        position: 'relative',\n        zIndex: 9000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 9\n      }\n    }, \"Hedefler\"));\n  };\n  const renderProfileTab = () => {\n    var _userData$weightLogs2;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-tab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-header-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 859,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-xl font-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 11\n      }\n    }, \"Profil Bilgilerim\"), !personalInfoEditing && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setPersonalInfoEditing(true),\n      className: \"btn btn-outline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      className: \"h-5 w-5 mr-1 inline\",\n      fill: \"none\",\n      viewBox: \"0 0 24 24\",\n      stroke: \"currentColor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      strokeWidth: 2,\n      d: \"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 865,\n        columnNumber: 17\n      }\n    })), \"D\\xFCzenle\")), personalInfoEditing ? /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSavePersonalInfo,\n      className: \"mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 873,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 17\n      }\n    }, \"\\u0130sim Soyisim\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      className: \"form-input\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      placeholder: \"Ad\\u0131n\\u0131z Soyad\\u0131n\\u0131z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 887,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"height\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 17\n      }\n    }, \"Boy (cm)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"height\",\n      className: \"form-input\",\n      value: height,\n      onChange: e => setHeight(e.target.value),\n      placeholder: \"\\xD6rn: 175\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"current-weight\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 17\n      }\n    }, \"Kilo (kg)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"current-weight\",\n      className: \"form-input\",\n      value: weight,\n      onChange: e => setWeight(e.target.value),\n      placeholder: \"\\xD6rn: 70\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 911,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"age\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912,\n        columnNumber: 17\n      }\n    }, \"Ya\\u015F\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"age\",\n      className: \"form-input\",\n      value: age,\n      onChange: e => setAge(e.target.value),\n      placeholder: \"\\xD6rn: 30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 923,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"gender\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 17\n      }\n    }, \"Cinsiyet\"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"gender\",\n      className: \"form-input\",\n      value: gender,\n      onChange: e => setGender(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 925,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"erkek\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 19\n      }\n    }, \"Erkek\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"kad\\u0131n\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 932,\n        columnNumber: 19\n      }\n    }, \"Kad\\u0131n\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"di\\u011Fer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 19\n      }\n    }, \"Di\\u011Fer\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"goal\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 938,\n        columnNumber: 17\n      }\n    }, \"Hedef\"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"goal\",\n      className: \"form-input\",\n      value: goal,\n      onChange: e => setGoal(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"kilo_verme\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 19\n      }\n    }, \"Kilo Vermek\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"kilo_alma\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 19\n      }\n    }, \"Kilo Almak\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"kilo_koruma\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 19\n      }\n    }, \"Kilo Korumak\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"kas_kazanma\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 948,\n        columnNumber: 19\n      }\n    }, \"Kas Kazanmak\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"saglikli_beslenme\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 949,\n        columnNumber: 19\n      }\n    }, \"Sa\\u011Fl\\u0131kl\\u0131 Beslenme\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex justify-end gap-2 mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => setPersonalInfoEditing(false),\n      className: \"btn btn-outline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 15\n      }\n    }, \"\\u0130ptal\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 962,\n        columnNumber: 15\n      }\n    }, isLoading ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"flex items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      className: \"animate-spin -ml-1 mr-2 h-4 w-4 text-white\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      fill: \"none\",\n      viewBox: \"0 0 24 24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"circle\", {\n      className: \"opacity-25\",\n      cx: \"12\",\n      cy: \"12\",\n      r: \"10\",\n      stroke: \"currentColor\",\n      strokeWidth: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      className: \"opacity-75\",\n      fill: \"currentColor\",\n      d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 23\n      }\n    })), \"Kaydediliyor...\") : \"Kaydet\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-info-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 977,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 15\n      }\n    }, name ? name.charAt(0).toUpperCase() : '?'), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"profile-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 981,\n        columnNumber: 15\n      }\n    }, name || 'İsimsiz Kullanıcı'), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"profile-bio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 982,\n        columnNumber: 15\n      }\n    }, userData && userData.joinDate && userData.joinDate !== 'Invalid Date' ? `${new Date(userData.joinDate).toLocaleDateString('tr-TR')} tarihinde katıldı` : 'Diyet Dostu üyesi')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-metrics-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 989,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 990,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 991,\n        columnNumber: 17\n      }\n    }, \"Boy\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 992,\n        columnNumber: 17\n      }\n    }, height ? `${height} cm` : '--')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 994,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 995,\n        columnNumber: 17\n      }\n    }, \"Kilo\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 996,\n        columnNumber: 17\n      }\n    }, weight ? `${weight} kg` : '--')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 998,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 999,\n        columnNumber: 17\n      }\n    }, \"BMI\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"metric-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 17\n      }\n    }, height && weight ? (weight / (height / 100 * (height / 100))).toFixed(1) : '--'))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-stats-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1008,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stats-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1009,\n        columnNumber: 15\n      }\n    }, \"\\u0130statistikler\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stats-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1010,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stat-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1011,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stat-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1012,\n        columnNumber: 19\n      }\n    }, userData && userData.weightLogs ? userData.weightLogs.length : 0), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stat-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1013,\n        columnNumber: 19\n      }\n    }, \"Kilo Kayd\\u0131\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stat-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1015,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stat-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1016,\n        columnNumber: 19\n      }\n    }, userData && userData.notes ? userData.notes.length : 0), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stat-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1017,\n        columnNumber: 19\n      }\n    }, \"Not\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stat-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1019,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stat-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1020,\n        columnNumber: 19\n      }\n    }, goal ? goal === 'kilo_verme' ? 'Kilo Verme' : goal === 'kilo_alma' ? 'Kilo Alma' : goal === 'kilo_koruma' ? 'Kilo Koruma' : goal === 'kas_kazanma' ? 'Kas Kazanma' : 'Sağlıklı Beslenme' : '--'), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"stat-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 19\n      }\n    }, \"Hedef\")))))), !personalInfoEditing && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1042,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-lg font-semibold mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1043,\n        columnNumber: 11\n      }\n    }, \"BMI De\\u011Feri\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bmi-gauge\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1044,\n        columnNumber: 11\n      }\n    }, height && weight ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bmi-meter-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bmi-meter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1048,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bmi-scale\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1049,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bmi-section bmi-underweight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1050,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bmi-section bmi-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1051,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bmi-section bmi-overweight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1052,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bmi-section bmi-obese\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1053,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bmi-indicator\",\n      style: {\n        left: `${Math.min(Math.max((weight / (height / 100 * (height / 100)) - 10) * 5, 0), 100)}%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1055,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bmi-labels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1062,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1063,\n        columnNumber: 21\n      }\n    }, \"Zay\\u0131f\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1064,\n        columnNumber: 21\n      }\n    }, \"Normal\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1065,\n        columnNumber: 21\n      }\n    }, \"Fazla Kilolu\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1066,\n        columnNumber: 21\n      }\n    }, \"Obez\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bmi-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-2xl font-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1070,\n        columnNumber: 19\n      }\n    }, (weight / (height / 100 * (height / 100))).toFixed(1)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-sm ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1073,\n        columnNumber: 19\n      }\n    }, \"kg/m\\xB2\")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"bmi-description mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1075,\n        columnNumber: 17\n      }\n    }, weight / (height / 100 * (height / 100)) < 18.5 ? 'Düşük kilolu kategoridesiniz. Sağlıklı beslenme ve tıbbi tavsiye önemlidir.' : weight / (height / 100 * (height / 100)) < 25 ? 'Tebrikler! Sağlıklı kilo aralığındasınız.' : weight / (height / 100 * (height / 100)) < 30 ? 'Fazla kilolu kategoridesiniz. Sağlıklı beslenme ve egzersiz önerilir.' : 'Obez kategoridesiniz. Bir sağlık uzmanının tavsiyelerini almanız önerilir.')) : /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center py-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 15\n      }\n    }, \"BMI hesaplamas\\u0131 i\\xE7in boy ve kilo bilgilerinizi ekleyin.\"))), !personalInfoEditing && userData && userData.goal && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1093,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-lg font-semibold mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1094,\n        columnNumber: 11\n      }\n    }, \"Hedef \\u0130lerleme\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1095,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1096,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1097,\n        columnNumber: 15\n      }\n    }, \"\\u0130lerleme: %\", userData.goalProgress || 0), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1098,\n        columnNumber: 15\n      }\n    }, userData.goalStart || '--', \" \\u2192 \", userData.goalTarget || '--')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-fill\",\n      style: {\n        width: `${userData.goalProgress || 0}%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1101,\n        columnNumber: 15\n      }\n    })))), !personalInfoEditing && (userData === null || userData === void 0 ? void 0 : (_userData$weightLogs2 = userData.weightLogs) === null || _userData$weightLogs2 === void 0 ? void 0 : _userData$weightLogs2.length) > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-lg font-semibold mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1112,\n        columnNumber: 11\n      }\n    }, \"Kilo Takibi\"), userData.weightLogs.length > 1 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pro-chart-container\",\n      style: {\n        zIndex: 1,\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1116,\n        columnNumber: 13\n      }\n    }, (() => {\n      // Kilo kayıtlarını tarihe göre sırala\n      const sortedLogs = [...userData.weightLogs].sort((a, b) => new Date(a.date) - new Date(b.date));\n\n      // Değerler için ölçek hesapla\n      const weights = sortedLogs.map(log => parseFloat(log.weight));\n      const maxWeight = Math.max(...weights);\n      const minWeight = Math.min(...weights);\n      const padding = Math.max(0.5, (maxWeight - minWeight) * 0.1);\n      const adjustedMin = Math.max(0, minWeight - padding);\n      const adjustedMax = maxWeight + padding;\n      const range = adjustedMax - adjustedMin;\n\n      // X ekseni için tarih etiketleri\n      const dateLabels = sortedLogs.map(log => {\n        const date = new Date(log.date);\n        return `${date.getDate()}/${date.getMonth() + 1}`;\n      });\n\n      // Gösterilecek X etiketleri (en fazla 4 tane)\n      const xLabelIndices = [];\n      if (sortedLogs.length <= 4) {\n        for (let i = 0; i < sortedLogs.length; i++) {\n          xLabelIndices.push(i);\n        }\n      } else {\n        xLabelIndices.push(0); // İlk\n\n        if (sortedLogs.length > 2) {\n          xLabelIndices.push(Math.floor(sortedLogs.length / 3)); // Yaklaşık üçte bir\n        }\n        if (sortedLogs.length > 3) {\n          xLabelIndices.push(Math.floor(2 * sortedLogs.length / 3)); // Yaklaşık üçte iki\n        }\n        xLabelIndices.push(sortedLogs.length - 1); // Son\n      }\n\n      // SVG için nokta koordinatları\n      const points = sortedLogs.map((log, index) => {\n        const x = index / (sortedLogs.length - 1) * 90;\n        const y = 100 - (parseFloat(log.weight) - adjustedMin) / range * 100;\n        return {\n          x,\n          y,\n          log,\n          date: new Date(log.date).toLocaleDateString('tr-TR')\n        };\n      });\n\n      // SVG path için çizgi noktaları\n      const linePath = points.map((point, i) => `${i === 0 ? 'M' : 'L'} ${point.x} ${point.y}`).join(' ');\n\n      // SVG path için alan dolgusu\n      const areaPath = `${linePath} L ${points[points.length - 1].x} 100 L 0 100 Z`;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pro-chart-inner\",\n        style: {\n          backgroundColor: 'white',\n          borderRadius: '8px',\n          padding: '10px 5px 20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1172,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pro-chart-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1173,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pro-chart-title\",\n        style: {\n          fontSize: '0.85rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1174,\n          columnNumber: 23\n        }\n      }, \"Kilo Takibi\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pro-chart-legend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-xs text-gray-500\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1176,\n          columnNumber: 25\n        }\n      }, dateLabels[0], \" - \", dateLabels[dateLabels.length - 1]))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pro-chart-canvas\",\n        style: {\n          height: '70px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1180,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pro-chart-y-axis\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"pro-chart-y-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1183,\n          columnNumber: 25\n        }\n      }, adjustedMax.toFixed(1), \" kg\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"pro-chart-y-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1184,\n          columnNumber: 25\n        }\n      }, adjustedMin.toFixed(1), \" kg\")), /*#__PURE__*/React.createElement(\"svg\", {\n        className: \"pro-chart-svg\",\n        viewBox: \"0 0 100 100\",\n        preserveAspectRatio: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1187,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"defs\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1189,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"linearGradient\", {\n        id: \"pro-chart-gradient-small\",\n        x1: \"0%\",\n        y1: \"0%\",\n        x2: \"0%\",\n        y2: \"100%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1190,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"stop\", {\n        offset: \"0%\",\n        stopColor: \"#4CAF50\",\n        stopOpacity: \"0.6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1191,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"stop\", {\n        offset: \"100%\",\n        stopColor: \"#4CAF50\",\n        stopOpacity: \"0.1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1192,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"line\", {\n        x1: \"0\",\n        y1: \"0\",\n        x2: \"100\",\n        y2: \"0\",\n        className: \"pro-chart-grid-line\",\n        style: {\n          stroke: 'rgba(0,0,0,0.03)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1197,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"line\", {\n        x1: \"0\",\n        y1: \"50\",\n        x2: \"100\",\n        y2: \"50\",\n        className: \"pro-chart-grid-line\",\n        style: {\n          stroke: 'rgba(0,0,0,0.03)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1198,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"line\", {\n        x1: \"0\",\n        y1: \"100\",\n        x2: \"100\",\n        y2: \"100\",\n        className: \"pro-chart-grid-line\",\n        style: {\n          stroke: 'rgba(0,0,0,0.03)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1199,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"path\", {\n        d: areaPath,\n        style: {\n          fill: 'url(#pro-chart-gradient-small)',\n          opacity: 0.2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1202,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"path\", {\n        d: linePath,\n        style: {\n          fill: 'none',\n          stroke: '#4CAF50',\n          strokeWidth: '1.5',\n          strokeLinecap: 'round',\n          strokeLinejoin: 'round'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1205,\n          columnNumber: 25\n        }\n      }), points.map((point, i) => /*#__PURE__*/React.createElement(\"circle\", {\n        key: i,\n        cx: point.x,\n        cy: point.y,\n        r: \"1.5\",\n        style: {\n          fill: 'white',\n          stroke: '#4CAF50',\n          strokeWidth: '1.5'\n        },\n        \"data-weight\": point.log.weight,\n        \"data-date\": point.date,\n        className: \"pro-chart-dot\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1209,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pro-chart-x-axis\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1223,\n          columnNumber: 23\n        }\n      }, xLabelIndices.map(idx => /*#__PURE__*/React.createElement(\"span\", {\n        key: `label-${idx}`,\n        style: {\n          position: 'absolute',\n          left: `${points[idx].x}%`,\n          transform: 'translateX(-50%)',\n          fontSize: '0.65rem',\n          color: '#666'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1225,\n          columnNumber: 27\n        }\n      }, dateLabels[idx])))));\n    })()), userData.weightLogs.length > 1 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex justify-center mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1242,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center text-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1243,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1244,\n        columnNumber: 17\n      }\n    }, \"Son kay\\u0131t: \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1245,\n        columnNumber: 17\n      }\n    }, userData.weightLogs.sort((a, b) => new Date(b.date) - new Date(a.date))[0].weight, \" kg\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"mx-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1249,\n        columnNumber: 17\n      }\n    }, \"\\u2022\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1250,\n        columnNumber: 17\n      }\n    }, \"Toplam kay\\u0131t: \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1251,\n        columnNumber: 17\n      }\n    }, userData.weightLogs.length)))));\n  };\n  const renderWeightTab = () => {\n    // Tablo oluşturulması için kilo kayıtlarını hazırla\n    let weightLogsToDisplay = [];\n    if (userData && userData.weightLogs) {\n      if (Array.isArray(userData.weightLogs)) {\n        weightLogsToDisplay = [...userData.weightLogs];\n      } else {\n        // Dizi değilse dizi haline getir\n        weightLogsToDisplay = [userData.weightLogs];\n      }\n    }\n    console.log(\"Görüntülenecek kilo kayıtları:\", weightLogsToDisplay);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1276,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1277,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-xl font-bold mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1278,\n        columnNumber: 11\n      }\n    }, \"Kilo Ge\\xE7mi\\u015Fi\"), weightLogsToDisplay.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1281,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overflow-x-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1282,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"w-full modern-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1283,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1284,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1285,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      className: \"text-left px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1286,\n        columnNumber: 23\n      }\n    }, \"Tarih\"), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"text-center px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1287,\n        columnNumber: 23\n      }\n    }, \"Kilo (kg)\"), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"text-center w-16 px-4 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1288,\n        columnNumber: 23\n      }\n    }, \"\\u0130\\u015Flem\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1291,\n        columnNumber: 19\n      }\n    }, weightLogsToDisplay.slice() // Kopya oluştur\n    .sort((a, b) => new Date(b.date) - new Date(a.date)) // En yeni kayıt üstte\n    .map((log, index) => {\n      // Bir önceki kilo kaydı ile farkı hesapla\n      let weightDiff = null;\n      if (index < weightLogsToDisplay.length - 1) {\n        const sortedLogs = [...weightLogsToDisplay].sort((a, b) => new Date(b.date) - new Date(a.date));\n        if (index + 1 < sortedLogs.length) {\n          weightDiff = parseFloat(log.weight) - parseFloat(sortedLogs[index + 1].weight);\n        }\n      }\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: log.id || index,\n        className: index % 2 === 0 ? 'bg-gray-50' : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1306,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"px-4 py-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1307,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font-medium\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1308,\n          columnNumber: 31\n        }\n      }, new Date(log.date).toLocaleDateString('tr-TR')), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-xs text-gray-500 block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1309,\n          columnNumber: 31\n        }\n      }, new Date(log.date).toLocaleTimeString('tr-TR', {\n        hour: '2-digit',\n        minute: '2-digit'\n      }))), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"text-center px-4 py-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1311,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font-semibold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1312,\n          columnNumber: 31\n        }\n      }, log.weight, \" kg\"), weightDiff !== null && /*#__PURE__*/React.createElement(\"span\", {\n        className: `ml-2 text-xs font-medium rounded-full px-2 py-1 ${weightDiff < 0 ? 'bg-green-100 text-green-800' : weightDiff > 0 ? 'bg-red-100 text-red-800' : 'bg-gray-100 text-gray-800'}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1314,\n          columnNumber: 33\n        }\n      }, weightDiff < 0 ? '↓' : weightDiff > 0 ? '↑' : '=', Math.abs(weightDiff).toFixed(1), \" kg\")), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"text-center px-4 py-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1326,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => handleDeleteWeight(log.id),\n        className: \"text-red-500 hover:text-red-700 transition-colors bg-red-50 hover:bg-red-100 p-1.5 rounded-full\",\n        title: \"Kilo kayd\\u0131n\\u0131 sil\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1327,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        className: \"h-4 w-4\",\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"currentColor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1332,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: 2,\n        d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1333,\n          columnNumber: 35\n        }\n      })))));\n    })))), weightLogsToDisplay.length > 1 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1347,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"text-lg font-semibold mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1348,\n        columnNumber: 19\n      }\n    }, \"Kilo De\\u011Fi\\u015Fim Grafi\\u011Fi\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pro-chart-container\",\n      style: {\n        maxWidth: '85%',\n        margin: '0 auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1349,\n        columnNumber: 19\n      }\n    }, (() => {\n      // Kilo kayıtlarını tarihe göre sırala\n      const sortedLogs = [...weightLogsToDisplay].sort((a, b) => new Date(a.date) - new Date(b.date));\n\n      // Değerler için ölçek hesapla\n      const weights = sortedLogs.map(log => parseFloat(log.weight));\n      const maxWeight = Math.max(...weights);\n      const minWeight = Math.min(...weights);\n      // Grafiği daha görsel hale getirmek için ölçekleri ayarla\n      const padding = Math.max(0.5, (maxWeight - minWeight) * 0.1);\n      const adjustedMin = Math.max(0, minWeight - padding);\n      const adjustedMax = maxWeight + padding;\n      const range = adjustedMax - adjustedMin;\n\n      // X ekseni için tarih etiketleri\n      const dateLabels = sortedLogs.map(log => {\n        const date = new Date(log.date);\n        return `${date.getDate()}/${date.getMonth() + 1}`;\n      });\n\n      // Gösterilecek X etiketleri (en fazla 5-6 tane)\n      const xLabelIndices = [];\n      if (sortedLogs.length <= 6) {\n        // 6 veya daha az nokta varsa hepsini göster\n        for (let i = 0; i < sortedLogs.length; i++) {\n          xLabelIndices.push(i);\n        }\n      } else {\n        // İlk, son ve arada eşit dağılımlı noktaları göster\n        xLabelIndices.push(0); // İlk\n\n        const step = Math.ceil(sortedLogs.length / 4);\n        for (let i = step; i < sortedLogs.length - 1; i += step) {\n          xLabelIndices.push(i);\n        }\n        xLabelIndices.push(sortedLogs.length - 1); // Son\n      }\n\n      // SVG için nokta koordinatları - %85'e kadar kullan\n      const points = sortedLogs.map((log, index) => {\n        const x = index / (sortedLogs.length - 1) * 85;\n        const y = 100 - (parseFloat(log.weight) - adjustedMin) / range * 100;\n        return {\n          x,\n          y,\n          log,\n          date: new Date(log.date).toLocaleDateString('tr-TR')\n        };\n      });\n\n      // SVG path için çizgi noktaları\n      const linePath = points.map((point, i) => `${i === 0 ? 'M' : 'L'} ${point.x} ${point.y}`).join(' ');\n\n      // SVG path için alan dolgusu\n      const areaPath = `${linePath} L ${points[points.length - 1].x} 100 L 0 100 Z`;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pro-chart-inner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1405,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pro-chart-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1406,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pro-chart-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1407,\n          columnNumber: 29\n        }\n      }, \"Kilo Takibi\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pro-chart-legend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1408,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1409,\n          columnNumber: 31\n        }\n      }, sortedLogs[0].date ? new Date(sortedLogs[0].date).toLocaleDateString('tr-TR', {\n        month: 'numeric',\n        year: 'numeric'\n      }) : '', \" - \", sortedLogs[sortedLogs.length - 1].date ? new Date(sortedLogs[sortedLogs.length - 1].date).toLocaleDateString('tr-TR', {\n        month: 'numeric',\n        year: 'numeric'\n      }) : ''))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pro-chart-canvas\",\n        style: {\n          height: '150px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1413,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pro-chart-y-axis\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1415,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"pro-chart-y-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1416,\n          columnNumber: 31\n        }\n      }, adjustedMax.toFixed(1), \" kg\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"pro-chart-y-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1417,\n          columnNumber: 31\n        }\n      }, ((adjustedMax + adjustedMin) / 2).toFixed(1), \" kg\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"pro-chart-y-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1418,\n          columnNumber: 31\n        }\n      }, adjustedMin.toFixed(1), \" kg\")), /*#__PURE__*/React.createElement(\"svg\", {\n        className: \"pro-chart-svg\",\n        viewBox: \"0 0 100 100\",\n        preserveAspectRatio: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1421,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"defs\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1423,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"linearGradient\", {\n        id: \"pro-chart-gradient\",\n        x1: \"0%\",\n        y1: \"0%\",\n        x2: \"0%\",\n        y2: \"100%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1424,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"stop\", {\n        offset: \"0%\",\n        stopColor: \"#ff3366\",\n        stopOpacity: \"0.7\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1425,\n          columnNumber: 35\n        }\n      }), /*#__PURE__*/React.createElement(\"stop\", {\n        offset: \"100%\",\n        stopColor: \"#ff3366\",\n        stopOpacity: \"0.1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1426,\n          columnNumber: 35\n        }\n      }))), /*#__PURE__*/React.createElement(\"line\", {\n        x1: \"0\",\n        y1: \"0\",\n        x2: \"100\",\n        y2: \"0\",\n        className: \"pro-chart-grid-line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1431,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"line\", {\n        x1: \"0\",\n        y1: \"33.33\",\n        x2: \"100\",\n        y2: \"33.33\",\n        className: \"pro-chart-grid-line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1432,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"line\", {\n        x1: \"0\",\n        y1: \"66.66\",\n        x2: \"100\",\n        y2: \"66.66\",\n        className: \"pro-chart-grid-line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1433,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"line\", {\n        x1: \"0\",\n        y1: \"100\",\n        x2: \"100\",\n        y2: \"100\",\n        className: \"pro-chart-grid-line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1434,\n          columnNumber: 31\n        }\n      }), xLabelIndices.map(idx => /*#__PURE__*/React.createElement(\"line\", {\n        key: `grid-${idx}`,\n        x1: points[idx].x,\n        y1: \"0\",\n        x2: points[idx].x,\n        y2: \"100\",\n        className: \"pro-chart-grid-line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1438,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(\"path\", {\n        d: areaPath,\n        className: \"pro-chart-area\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1449,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"path\", {\n        d: linePath,\n        className: \"pro-chart-line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1452,\n          columnNumber: 31\n        }\n      }), points.map((point, i) => /*#__PURE__*/React.createElement(\"circle\", {\n        key: i,\n        cx: point.x,\n        cy: point.y,\n        className: \"pro-chart-dot\",\n        \"data-weight\": point.log.weight,\n        \"data-date\": point.date,\n        onMouseOver: e => {\n          const tooltip = document.querySelector('.pro-chart-tooltip');\n          if (!tooltip) return;\n          tooltip.style.opacity = 1;\n          tooltip.style.left = `${e.target.cx.baseVal.value}%`;\n          tooltip.style.top = `${e.target.cy.baseVal.value}%`;\n          const valueElem = tooltip.querySelector('.pro-chart-tooltip-value');\n          const dateElem = tooltip.querySelector('.pro-chart-tooltip-date');\n          if (valueElem) valueElem.textContent = `${point.log.weight} kg`;\n          if (dateElem) dateElem.textContent = point.date;\n        },\n        onMouseOut: () => {\n          const tooltip = document.querySelector('.pro-chart-tooltip');\n          if (tooltip) tooltip.style.opacity = 0;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1456,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pro-chart-x-axis\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1486,\n          columnNumber: 29\n        }\n      }, xLabelIndices.map(idx => /*#__PURE__*/React.createElement(\"span\", {\n        key: `label-${idx}`,\n        className: \"pro-chart-x-label\",\n        style: {\n          left: `${points[idx].x}%`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1488,\n          columnNumber: 33\n        }\n      }, dateLabels[idx]))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pro-chart-tooltip\",\n        ref: tooltipRef,\n        style: {\n          zIndex: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1499,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pro-chart-tooltip-value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1500,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pro-chart-tooltip-date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1501,\n          columnNumber: 31\n        }\n      }))));\n    })()))) : /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center py-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1512,\n        columnNumber: 13\n      }\n    }, \"Hen\\xFCz kilo kayd\\u0131 bulunmuyor.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1516,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-xl font-bold mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1517,\n        columnNumber: 11\n      }\n    }, \"Yeni Kilo Ekle\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleAddWeight,\n      className: \"mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1518,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1519,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"new-weight\",\n      className: \"form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1520,\n        columnNumber: 15\n      }\n    }, \"Kilonuz (kg)\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1521,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      id: \"new-weight\",\n      className: \"form-input\",\n      value: newWeight,\n      onChange: e => setNewWeight(e.target.value),\n      placeholder: \"\\xD6rn: 70.5\",\n      step: \"0.1\",\n      min: \"30\",\n      max: \"250\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1522,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn ml-2\",\n      disabled: isLoading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1534,\n        columnNumber: 17\n      }\n    }, isLoading ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"flex items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1540,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      className: \"animate-spin -ml-1 mr-2 h-4 w-4 text-white\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      fill: \"none\",\n      viewBox: \"0 0 24 24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1541,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"circle\", {\n      className: \"opacity-25\",\n      cx: \"12\",\n      cy: \"12\",\n      r: \"10\",\n      stroke: \"currentColor\",\n      strokeWidth: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1542,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      className: \"opacity-75\",\n      fill: \"currentColor\",\n      d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1543,\n        columnNumber: 25\n      }\n    })), \"Ekleniyor...\") : \"Ekle\"))))));\n  };\n  const renderExerciseTab = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1558,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1559,\n      columnNumber: 7\n    }\n  }, \"Egzersiz Plan\\u0131m\"), userData.exercisePlan && userData.exercisePlan.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1561,\n      columnNumber: 9\n    }\n  }, userData.exercisePlan.map((exercise, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"border rounded-lg p-4 hover:shadow-md transition-shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1563,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center justify-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1564,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1565,\n      columnNumber: 17\n    }\n  }, exercise.name), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: exercise.completed,\n    onChange: () => handleToggleExercise(exercise),\n    className: \"h-5 w-5 text-diet-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1566,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-gray-600 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1573,\n      columnNumber: 15\n    }\n  }, exercise.description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2 text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1574,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"inline-block bg-diet-light-green text-diet-green-dark px-2 py-1 rounded mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1575,\n      columnNumber: 17\n    }\n  }, exercise.duration, \" dakika\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"inline-block bg-diet-light-blue text-diet-blue-dark px-2 py-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1578,\n      columnNumber: 17\n    }\n  }, exercise.caloriesBurned, \" kalori\"))))) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1586,\n      columnNumber: 9\n    }\n  }, \"Hen\\xFCz egzersiz plan\\u0131 olu\\u015Fturulmad\\u0131.\"));\n  const renderDietTab = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1592,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1593,\n      columnNumber: 7\n    }\n  }, \"Beslenme Plan\\u0131m\"), userData.dietPlan && Object.keys(userData.dietPlan).length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1595,\n      columnNumber: 9\n    }\n  }, Object.entries(userData.dietPlan).map(([day, meals]) => /*#__PURE__*/React.createElement(\"div\", {\n    key: day,\n    className: \"mb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1597,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"font-semibold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1598,\n      columnNumber: 15\n    }\n  }, day), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-cols-1 md:grid-cols-2 gap-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1599,\n      columnNumber: 15\n    }\n  }, meals.map((meal, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"border rounded-lg p-3 hover:shadow-md transition-shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1601,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center justify-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1602,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-semibold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1603,\n      columnNumber: 23\n    }\n  }, meal.name), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: meal.completed,\n    onChange: () => handleToggleMeal(day, meal),\n    className: \"h-5 w-5 text-diet-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1604,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-gray-600 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1611,\n      columnNumber: 21\n    }\n  }, meal.description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2 text-sm flex flex-wrap gap-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1612,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"inline-block bg-diet-light-green text-diet-green-dark px-2 py-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1613,\n      columnNumber: 23\n    }\n  }, meal.calories, \" kalori\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"inline-block bg-diet-light-blue text-diet-blue-dark px-2 py-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1616,\n      columnNumber: 23\n    }\n  }, meal.protein, \"g protein\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"inline-block bg-diet-light-yellow text-diet-yellow-dark px-2 py-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1619,\n      columnNumber: 23\n    }\n  }, meal.carbs, \"g karbonhidrat\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"inline-block bg-diet-light-red text-diet-red-dark px-2 py-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1622,\n      columnNumber: 23\n    }\n  }, meal.fat, \"g ya\\u011F\")))))))) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1633,\n      columnNumber: 9\n    }\n  }, \"Hen\\xFCz beslenme plan\\u0131 olu\\u015Fturulmad\\u0131.\"));\n  const renderHealthTab = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1639,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-between items-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1640,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1641,\n      columnNumber: 9\n    }\n  }, \"Sa\\u011Fl\\u0131k Bilgilerim\"), !healthInfoEditing && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setHealthInfoEditing(true),\n    className: \"btn btn-outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1643,\n      columnNumber: 11\n    }\n  }, \"D\\xFCzenle\")), healthInfoEditing ? /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSaveHealthInfo,\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1650,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1651,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"diseases\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1652,\n      columnNumber: 13\n    }\n  }, \"Kronik Hastal\\u0131klar / Sa\\u011Fl\\u0131k Durumu\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"diseases\",\n    className: \"form-input\",\n    value: diseases,\n    onChange: e => setDiseases(e.target.value),\n    placeholder: \"Diyabet, hipertansiyon, vb.\",\n    rows: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1653,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1663,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"medications\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1664,\n      columnNumber: 13\n    }\n  }, \"D\\xFCzenli Kulland\\u0131\\u011F\\u0131n\\u0131z \\u0130la\\xE7lar\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"medications\",\n    className: \"form-input\",\n    value: medications,\n    onChange: e => setMedications(e.target.value),\n    placeholder: \"\\u0130la\\xE7 isimleri ve dozaj bilgileri\",\n    rows: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1665,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex gap-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1675,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1676,\n      columnNumber: 13\n    }\n  }, \"Kaydet\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setHealthInfoEditing(false),\n    className: \"btn btn-outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1677,\n      columnNumber: 13\n    }\n  }, \"\\u0130ptal\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1683,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1684,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"font-semibold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1685,\n      columnNumber: 13\n    }\n  }, \"Kronik Hastal\\u0131klar / Sa\\u011Fl\\u0131k Durumu\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1686,\n      columnNumber: 13\n    }\n  }, diseases || 'Belirtilmemiş')), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1689,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"font-semibold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1690,\n      columnNumber: 13\n    }\n  }, \"D\\xFCzenli Kulland\\u0131\\u011F\\u0131n\\u0131z \\u0130la\\xE7lar\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1691,\n      columnNumber: 13\n    }\n  }, medications || 'Belirtilmemiş'))));\n  const renderNotesTab = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1699,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1700,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1701,\n      columnNumber: 9\n    }\n  }, \"Notlar\\u0131m\"), userData.notes && userData.notes.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col space-y-2 mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1703,\n      columnNumber: 11\n    }\n  }, userData.notes.map((note, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"flex items-start gap-3 p-3 border rounded hover:shadow-sm transition-shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1705,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: note.completed,\n    onChange: () => handleToggleNote(note),\n    className: \"h-5 w-5 text-diet-green mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1706,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: `flex-grow ${note.completed ? 'line-through text-gray-400' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1712,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1713,\n      columnNumber: 19\n    }\n  }, note.text), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-xs text-gray-500 mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1714,\n      columnNumber: 19\n    }\n  }, note.date ? `${new Date(note.date).toLocaleDateString('tr-TR')} - ${new Date(note.date).toLocaleTimeString('tr-TR')}` : 'Tarih bilgisi yok')), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDeleteNote(note),\n    className: \"text-diet-red hover:text-diet-red-dark transition-colors\",\n    title: \"Notu sil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1718,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\",\n    className: \"w-5 h-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1723,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1724,\n      columnNumber: 21\n    }\n  })))))) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1731,\n      columnNumber: 11\n    }\n  }, \"Hen\\xFCz notunuz bulunmuyor.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1735,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1736,\n      columnNumber: 9\n    }\n  }, \"Yeni Not Ekle\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleAddNote,\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1737,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1738,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"note\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1739,\n      columnNumber: 13\n    }\n  }, \"Notunuz\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1740,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"note\",\n    className: \"form-input\",\n    value: newNote,\n    onChange: e => setNewNote(e.target.value),\n    placeholder: \"Notunuzu buraya yaz\\u0131n...\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1741,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1750,\n      columnNumber: 15\n    }\n  }, \"Ekle\"))))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container py-6\",\n    style: {\n      marginTop: '70px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1759,\n      columnNumber: 5\n    }\n  }, renderTabs(), showSuccessMessage && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"success-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1763,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"success-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1764,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1765,\n      columnNumber: 13\n    }\n  }, successMessage), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowSuccessMessage(false),\n    className: \"success-close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1766,\n      columnNumber: 13\n    }\n  }, \"Tamam\"))), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1777,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1778,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1779,\n      columnNumber: 13\n    }\n  }, error), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setError(''),\n    className: \"error-close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1780,\n      columnNumber: 13\n    }\n  }, \"Tamam\"))), loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-center items-center min-h-[60vh]\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1791,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1792,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-16 h-16 border-4 border-t-transparent rounded-full animate-spin mx-auto mb-4\",\n    style: {\n      borderColor: 'var(--primary-color) transparent transparent transparent'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1793,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1795,\n      columnNumber: 13\n    }\n  }, \"Profil bilgileri y\\xFCkleniyor...\"))) : error && !loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mx-auto max-w-md mt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1799,\n      columnNumber: 9\n    }\n  }, error) : !userData ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mx-auto max-w-md mt-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1803,\n      columnNumber: 9\n    }\n  }, \"Kullan\\u0131c\\u0131 verileri bulunamad\\u0131.\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1807,\n      columnNumber: 9\n    }\n  }, activeTab === 'bilgiler' && renderProfileTab(), activeTab === 'kilo' && renderWeightTab(), activeTab === 'egzersiz' && renderExerciseTab(), activeTab === 'beslenme' && renderDietTab(), activeTab === 'saglik' && renderHealthTab(), activeTab === 'notlar' && renderNotesTab()));\n};\nexport default Profile;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","ExerciseCard","Profile","userData","setUserData","activeTab","setActiveTab","loading","setLoading","error","setError","newNote","setNewNote","newWeight","setNewWeight","diseases","setDiseases","medications","setMedications","healthInfoEditing","setHealthInfoEditing","personalInfoEditing","setPersonalInfoEditing","height","setHeight","weight","setWeight","age","setAge","gender","setGender","name","setName","goal","setGoal","showSuccessMessage","setShowSuccessMessage","successMessage","setSuccessMessage","isLoading","setIsLoading","tooltipRef","cachedUserData","localStorage","getItem","parsedData","JSON","parse","console","log","weightLogs","Array","isArray","info","removeItem","fetchUserData","_userData$weightLogs","length","setupTooltip","tooltip","document","querySelector","_document$querySelect","newTooltip","createElement","className","style","zIndex","innerHTML","appendChild","dots","querySelectorAll","forEach","dot","addEventListener","_document$querySelect2","getAttribute","date","textContent","rect","getBoundingClientRect","container","left","width","top","opacity","setTimeout","token","response","get","headers","Authorization","timeout","data","updatedUserData","warn","cachedData","parsedCache","serverLogIds","map","id","additionalLogs","filter","includes","e","index","self","findIndex","l","sort","a","b","Date","setItem","stringify","apiError","status","request","handleToggleExercise","exercise","Error","updatedExercises","exercisePlan","ex","completed","optimisticUserData","post","type","item","handleToggleMeal","day","meal","updatedDietPlan","dietPlan","m","handleToggleNote","note","updatedNotes","notes","n","handleAddNote","preventDefault","trim","tempId","now","newNoteObj","text","toISOString","handleAddWeight","newWeightValue","parseFloat","newWeightLog","toString","currentUserData","push","success","message","handleSaveHealthInfo","handleDeleteNote","filteredNotes","noteId","handleSavePersonalInfo","updateData","undefined","user","handleDeleteWeight","weightId","window","confirm","sortedLogs","lastLog","renderTabs","position","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","cursor","renderProfileTab","_userData$weightLogs2","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onSubmit","htmlFor","value","onChange","target","placeholder","cx","cy","r","charAt","toUpperCase","joinDate","toLocaleDateString","toFixed","Fragment","Math","min","max","goalProgress","goalStart","goalTarget","weights","maxWeight","minWeight","padding","adjustedMin","adjustedMax","range","dateLabels","getDate","getMonth","xLabelIndices","i","floor","points","x","y","linePath","point","join","areaPath","backgroundColor","borderRadius","fontSize","preserveAspectRatio","x1","y1","x2","y2","offset","stopColor","stopOpacity","key","idx","transform","color","renderWeightTab","weightLogsToDisplay","slice","weightDiff","toLocaleTimeString","hour","minute","abs","title","maxWidth","margin","step","ceil","month","year","onMouseOver","baseVal","valueElem","dateElem","onMouseOut","ref","required","disabled","renderExerciseTab","checked","description","duration","caloriesBurned","renderDietTab","Object","keys","entries","meals","calories","protein","carbs","fat","renderHealthTab","rows","renderNotesTab","marginTop","borderColor"],"sources":["C:/Users/Administrator/Desktop/specialdiet.ai/diyet-dostu-web/client/src/components/Profile.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport ExerciseCard from './ExerciseCard';\r\nimport '../styles/global.css';\r\n\r\nconst Profile = () => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('bilgiler');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [newNote, setNewNote] = useState('');\r\n  const [newWeight, setNewWeight] = useState('');\r\n  const [diseases, setDiseases] = useState('');\r\n  const [medications, setMedications] = useState('');\r\n  const [healthInfoEditing, setHealthInfoEditing] = useState(false);\r\n  const [personalInfoEditing, setPersonalInfoEditing] = useState(false);\r\n  const [height, setHeight] = useState('');\r\n  const [weight, setWeight] = useState('');\r\n  const [age, setAge] = useState('');\r\n  const [gender, setGender] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [goal, setGoal] = useState('');\r\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const tooltipRef = useRef(null); // tooltipRef eklendi\r\n\r\n  useEffect(() => {\r\n    // localStorage'da kaydedilmiş userData'ya öncelik ver\r\n    const cachedUserData = localStorage.getItem('userData');\r\n    if (cachedUserData) {\r\n      try {\r\n        const parsedData = JSON.parse(cachedUserData);\r\n        console.log('localStorage\\'dan yüklenen kullanıcı verileri:', parsedData);\r\n        \r\n        // weightLogs'un dizi olduğundan emin olalım\r\n        if (parsedData) {\r\n          if (!parsedData.weightLogs) {\r\n            parsedData.weightLogs = [];\r\n          } else if (!Array.isArray(parsedData.weightLogs)) {\r\n            parsedData.weightLogs = [parsedData.weightLogs];\r\n          }\r\n        }\r\n        \r\n        setUserData(parsedData);\r\n        \r\n        if (parsedData.info) {\r\n          setDiseases(parsedData.info.diseases || '');\r\n          setMedications(parsedData.info.medications || '');\r\n          setHeight(parsedData.info.height || '');\r\n          setWeight(parsedData.info.weight || '');\r\n          setAge(parsedData.info.age || '');\r\n          setGender(parsedData.info.gender || '');\r\n        }\r\n        setName(parsedData.name || '');\r\n        setGoal(parsedData.goal || '');\r\n        \r\n        console.log('Önbellekten kullanıcı verileri yüklendi:', parsedData);\r\n      } catch (error) {\r\n        console.error(\"Önbellek verisi ayrıştırılırken hata:\", error);\r\n        localStorage.removeItem('userData'); // Bozuk veriyi temizle\r\n      }\r\n    }\r\n    \r\n    // Her durumda güncel verileri de sunucudan al\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (activeTab === 'bilgiler' && userData?.weightLogs?.length > 1) {\r\n      const setupTooltip = () => {\r\n        const tooltip = document.querySelector('.profile-tab .pro-chart-tooltip');\r\n        if (!tooltip) {\r\n          // Tooltip yoksa oluştur\r\n          const newTooltip = document.createElement('div');\r\n          newTooltip.className = 'pro-chart-tooltip';\r\n          newTooltip.style.zIndex = '5'; // Düşük z-index değeri\r\n          newTooltip.innerHTML = `\r\n            <div class=\"pro-chart-tooltip-value\"></div>\r\n            <div class=\"pro-chart-tooltip-date\"></div>\r\n          `;\r\n          document.querySelector('.profile-tab .pro-chart-container')?.appendChild(newTooltip);\r\n        }\r\n\r\n        // Noktalar için olay dinleyicileri ekle\r\n        const dots = document.querySelectorAll('.profile-tab .pro-chart-dot');\r\n        dots.forEach(dot => {\r\n          dot.addEventListener('mouseover', function() {\r\n            const tooltip = document.querySelector('.profile-tab .pro-chart-tooltip');\r\n            if (tooltip) {\r\n              const weight = this.getAttribute('data-weight');\r\n              const date = this.getAttribute('data-date');\r\n              tooltip.querySelector('.pro-chart-tooltip-value').textContent = `${weight} kg`;\r\n              tooltip.querySelector('.pro-chart-tooltip-date').textContent = date;\r\n              \r\n              // Tooltip pozisyonunu ayarla\r\n              const rect = this.getBoundingClientRect();\r\n              const container = document.querySelector('.profile-tab .pro-chart-container')?.getBoundingClientRect();\r\n              if (container) { // 81. satırdaki hata düzeltildi: container varsa kullan\r\n                tooltip.style.left = `${rect.left - container.left + rect.width/2}px`;\r\n                tooltip.style.top = `${rect.top - container.top}px`;\r\n              }\r\n              tooltip.style.opacity = '1';\r\n            }\r\n          });\r\n          \r\n          dot.addEventListener('mouseout', function() {\r\n            const tooltip = document.querySelector('.profile-tab .pro-chart-tooltip');\r\n            if (tooltip) {\r\n              tooltip.style.opacity = '0';\r\n            }\r\n          });\r\n        });\r\n      };\r\n      \r\n      // Grafik yüklendikten sonra tooltip'i ayarla\r\n      setTimeout(setupTooltip, 500);\r\n    }\r\n  }, [activeTab, userData]);\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        console.error('Oturum token bulunamadı');\r\n        setError('Oturum zaman aşımına uğradı. Lütfen tekrar giriş yapın.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      console.log('Sunucudan profil verileri alınıyor...');\r\n      \r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/profile', {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n          timeout: 5000 // 5 saniye timeout ekle\r\n        });\r\n        \r\n        console.log(\"Sunucudan alınan profil verileri:\", response.data);\r\n        \r\n        if (response.data) {\r\n          const updatedUserData = response.data;\r\n          \r\n          // Kilo geçmişi verilerinin diziden oluştuğundan emin olalım\r\n          if (!updatedUserData.weightLogs) {\r\n            updatedUserData.weightLogs = [];\r\n          } else if (!Array.isArray(updatedUserData.weightLogs)) {\r\n            console.warn(\"weightLogs bir dizi değil, düzeltiliyor:\", updatedUserData.weightLogs);\r\n            updatedUserData.weightLogs = [updatedUserData.weightLogs];\r\n          }\r\n          \r\n          // Merging: localStorage'da olup sunucuda olmayan kilo kayıtları\r\n          const cachedData = localStorage.getItem('userData');\r\n          if (cachedData) {\r\n            try {\r\n              const parsedCache = JSON.parse(cachedData);\r\n              \r\n              // Eğer localStorage'da weightLogs varsa ve sunucudan gelen verilerden fazla kayıt içeriyorsa\r\n              if (parsedCache.weightLogs && Array.isArray(parsedCache.weightLogs) && \r\n                  parsedCache.weightLogs.length > updatedUserData.weightLogs.length) {\r\n                console.log(\"localStorage'daki kilo kayıtları sunucudakinden fazla, birleştiriliyor\");\r\n                \r\n                // Sunucudaki kayıtların ID'lerini tut\r\n                const serverLogIds = updatedUserData.weightLogs.map(log => log.id);\r\n                \r\n                // localStorage'da olup sunucuda olmayan kayıtları ekle\r\n                const additionalLogs = parsedCache.weightLogs.filter(log => !serverLogIds.includes(log.id));\r\n                \r\n                if (additionalLogs.length > 0) {\r\n                  console.log(\"Sunucuda olmayan, localStorage'dan eklenen kayıtlar:\", additionalLogs);\r\n                  updatedUserData.weightLogs = [...updatedUserData.weightLogs, ...additionalLogs];\r\n                }\r\n              }\r\n            } catch (e) {\r\n              console.error(\"localStorage'daki verileri birleştirirken hata:\", e);\r\n            }\r\n          }\r\n          \r\n          // Kilo kayıtları için benzersiz ID'leri kontrol et ve tarihe göre sırala\r\n          updatedUserData.weightLogs = updatedUserData.weightLogs\r\n            .filter((log, index, self) => \r\n              index === self.findIndex(l => l.id === log.id)\r\n            )\r\n            .sort((a, b) => new Date(b.date) - new Date(a.date));\r\n          \r\n          // Önce localStorage'a kaydet\r\n          localStorage.setItem('userData', JSON.stringify(updatedUserData));\r\n          console.log('Kullanıcı verileri localStorage\\'a kaydedildi');\r\n          \r\n          // Sonra state'i güncelle\r\n          setUserData(updatedUserData);\r\n          \r\n          // Bilgileri state'e aktar\r\n          if (updatedUserData.info) {\r\n            setDiseases(updatedUserData.info.diseases || '');\r\n            setMedications(updatedUserData.info.medications || '');\r\n            setHeight(updatedUserData.info.height || '');\r\n            setWeight(updatedUserData.info.weight || '');\r\n            setAge(updatedUserData.info.age || '');\r\n            setGender(updatedUserData.info.gender || '');\r\n          }\r\n          \r\n          setName(updatedUserData.name || '');\r\n          setGoal(updatedUserData.goal || '');\r\n          \r\n          console.log('Form state değerleri güncellendi');\r\n        } else {\r\n          console.error('API yanıtında veri yok veya beklenmeyen format');\r\n          // LocalStorage'daki verileri koruyalım, hata mesajını göstermeyelim\r\n        }\r\n      } catch (apiError) {\r\n        console.error('API isteği başarısız:', apiError);\r\n        // Bağlantı hatası durumunda localStorage'daki verileri kullan\r\n        console.log(\"Sunucu bağlantısı başarısız, localStorage'daki veriler korunacak\");\r\n        // Hata mesajı göstermiyoruz çünkü localStorage'daki verileri kullanacağız\r\n      }\r\n    } catch (error) {\r\n      console.error('Profil bilgileri yüklenirken hata:', error);\r\n      \r\n      // Hata detaylarını göster\r\n      if (error.response) {\r\n        console.error('Sunucu yanıtı:', error.response.data);\r\n        console.error('Durum kodu:', error.response.status);\r\n      } else if (error.request) {\r\n        console.error('Yanıt alınamadı:', error.request);\r\n      }\r\n      \r\n      setError('Profil bilgileri yüklenemedi. Lütfen ağ bağlantınızı kontrol edin ve daha sonra tekrar deneyin.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleToggleExercise = async (exercise) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        throw new Error('Oturum zaman aşımına uğradı. Lütfen tekrar giriş yapın.');\r\n      }\r\n      \r\n      // İyimser UI güncellemesi\r\n      const updatedExercises = userData.exercisePlan.map(ex => {\r\n        if (ex.id === exercise.id) {\r\n          return { ...ex, completed: !ex.completed };\r\n        }\r\n        return ex;\r\n      });\r\n      \r\n      const optimisticUserData = { ...userData, exercisePlan: updatedExercises };\r\n      setUserData(optimisticUserData);\r\n      localStorage.setItem('userData', JSON.stringify(optimisticUserData));\r\n      \r\n      await axios.post(\r\n        'http://localhost:5000/api/profile/mark-complete',\r\n        {\r\n          type: 'exercise',\r\n          item: exercise,\r\n          completed: !exercise.completed\r\n        },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      \r\n      // Başarılı işlem sonrası sunucudan güncel verileri al\r\n      fetchUserData();\r\n    } catch (error) {\r\n      console.error('Egzersiz durumu güncellenirken hata:', error);\r\n      setError('Egzersiz durumu güncellenemedi. Lütfen tekrar deneyin.');\r\n      fetchUserData(); // Hata durumunda orijinal verileri geri yükle\r\n    }\r\n  };\r\n\r\n  const handleToggleMeal = async (day, meal) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        throw new Error('Oturum zaman aşımına uğradı. Lütfen tekrar giriş yapın.');\r\n      }\r\n      \r\n      // İyimser UI güncellemesi\r\n      const updatedDietPlan = { ...userData.dietPlan };\r\n      if (updatedDietPlan[day]) {\r\n        updatedDietPlan[day] = updatedDietPlan[day].map(m => {\r\n          if (m.name === meal.name) {\r\n            return { ...m, completed: !m.completed };\r\n          }\r\n          return m;\r\n        });\r\n      }\r\n      \r\n      const optimisticUserData = { ...userData, dietPlan: updatedDietPlan };\r\n      setUserData(optimisticUserData);\r\n      localStorage.setItem('userData', JSON.stringify(optimisticUserData));\r\n      \r\n      await axios.post(\r\n        'http://localhost:5000/api/profile/mark-complete',\r\n        {\r\n          type: 'meal',\r\n          day,\r\n          meal: meal.name,\r\n          completed: !meal.completed\r\n        },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      \r\n      // Başarılı işlem sonrası sunucudan güncel verileri al\r\n      fetchUserData();\r\n    } catch (error) {\r\n      console.error('Yemek durumu güncellenirken hata:', error);\r\n      setError('Yemek durumu güncellenemedi. Lütfen tekrar deneyin.');\r\n      fetchUserData(); // Hata durumunda orijinal verileri geri yükle\r\n    }\r\n  };\r\n\r\n  const handleToggleNote = async (note) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        throw new Error('Oturum zaman aşımına uğradı. Lütfen tekrar giriş yapın.');\r\n      }\r\n      \r\n      // İyimser UI güncellemesi\r\n      const updatedNotes = userData.notes.map(n => {\r\n        if (n.id === note.id) {\r\n          return { ...n, completed: !n.completed };\r\n        }\r\n        return n;\r\n      });\r\n      \r\n      const optimisticUserData = { ...userData, notes: updatedNotes };\r\n      setUserData(optimisticUserData);\r\n      localStorage.setItem('userData', JSON.stringify(optimisticUserData));\r\n      \r\n      await axios.post(\r\n        'http://localhost:5000/api/profile/mark-complete',\r\n        {\r\n          type: 'note',\r\n          note,\r\n          completed: !note.completed\r\n        },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      \r\n      // Başarılı işlem sonrası sunucudan güncel verileri al\r\n      fetchUserData();\r\n    } catch (error) {\r\n      console.error('Not durumu güncellenirken hata:', error);\r\n      setError('Not durumu güncellenemedi. Lütfen tekrar deneyin.');\r\n      fetchUserData(); // Hata durumunda orijinal verileri geri yükle\r\n    }\r\n  };\r\n\r\n  const handleAddNote = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!newNote.trim()) return;\r\n    \r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        throw new Error('Oturum zaman aşımına uğradı. Lütfen tekrar giriş yapın.');\r\n      }\r\n      \r\n      // Yeni not oluştur\r\n      const tempId = Date.now(); // Geçici ID\r\n      const newNoteObj = {\r\n        id: tempId,\r\n        text: newNote,\r\n        date: new Date().toISOString(),\r\n        completed: false\r\n      };\r\n      \r\n      // İyimser UI güncellemesi\r\n      const updatedNotes = [...(userData.notes || []), newNoteObj];\r\n      const optimisticUserData = { ...userData, notes: updatedNotes };\r\n      \r\n      setUserData(optimisticUserData);\r\n      localStorage.setItem('userData', JSON.stringify(optimisticUserData));\r\n      setNewNote(''); // Input alanını temizle\r\n      \r\n      // API çağrısı\r\n      const response = await axios.post(\r\n        'http://localhost:5000/api/profile/update',\r\n        {\r\n          type: 'note',\r\n          text: newNote\r\n        },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      \r\n      console.log(\"Not ekleme yanıtı:\", response.data);\r\n      \r\n      // Başarı mesajı göster\r\n      setSuccessMessage('Not başarıyla eklendi.');\r\n      setShowSuccessMessage(true);\r\n      \r\n      setTimeout(() => {\r\n        setShowSuccessMessage(false);\r\n      }, 3000);\r\n      \r\n      // Güncel verileri al\r\n      fetchUserData();\r\n    } catch (error) {\r\n      console.error('Not eklenirken hata:', error);\r\n      setError('Not eklenemedi. Lütfen tekrar deneyin.');\r\n      setNewNote(newNote); // Hata durumunda girilen notu geri al\r\n      fetchUserData(); // Orijinal verileri geri yükle\r\n    }\r\n  };\r\n\r\n  const handleAddWeight = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!newWeight.trim()) return;\r\n    \r\n    try {\r\n      setIsLoading(true); // Yükleniyor durumunu göster\r\n      \r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        throw new Error('Oturum zaman aşımına uğradı. Lütfen tekrar giriş yapın.');\r\n      }\r\n      \r\n      // Yeni kilo kaydı oluştur\r\n      const newWeightValue = parseFloat(newWeight);\r\n      const newWeightLog = {\r\n        id: Date.now().toString(), // Benzersiz bir ID\r\n        weight: newWeightValue,\r\n        date: new Date().toISOString()\r\n      };\r\n      \r\n      console.log(\"Eklenecek yeni kilo kaydı:\", newWeightLog);\r\n      \r\n      // Mevcut userData'yı güncelleyelim\r\n      let currentUserData = {...userData};\r\n      \r\n      // weightLogs dizisinin varlığını kontrol et\r\n      if (!currentUserData.weightLogs) {\r\n        currentUserData.weightLogs = [];\r\n      } else if (!Array.isArray(currentUserData.weightLogs)) {\r\n        // Eğer dizi değilse dizi haline getir\r\n        currentUserData.weightLogs = [currentUserData.weightLogs];\r\n      }\r\n      \r\n      // Yeni kilo kaydını ekle\r\n      currentUserData.weightLogs.push(newWeightLog);\r\n      \r\n      // Mevcut kilo bilgisini de güncelle\r\n      if (!currentUserData.info) {\r\n        currentUserData.info = {}; \r\n      }\r\n      \r\n      currentUserData.info.weight = newWeightValue;\r\n      \r\n      console.log(\"Güncellenecek kullanıcı verisi:\", currentUserData);\r\n      \r\n      // Önce yerel state'i güncelle\r\n      setUserData(currentUserData);\r\n      setWeight(newWeightValue.toString());\r\n      \r\n      // localStorage'a kaydet\r\n      localStorage.setItem('userData', JSON.stringify(currentUserData));\r\n      console.log(\"Kullanıcı verileri localStorage'a kaydedildi\");\r\n      \r\n      // Input alanını temizle\r\n      setNewWeight('');\r\n      \r\n      // Sunucuya gönder\r\n      try {\r\n        const response = await axios.post(\r\n          'http://localhost:5000/api/profile/update',\r\n          {\r\n            type: 'weight',\r\n            weight: newWeightValue\r\n          },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        \r\n        console.log(\"Sunucu yanıtı:\", response.data);\r\n        \r\n        if (response.data && response.data.success) {\r\n          console.log(\"Kilo kaydı sunucuya başarıyla kaydedildi\");\r\n        } else {\r\n          console.warn(\"Sunucu başarı bildirdi ancak tam istenilen yanıt formatında değil:\", response.data);\r\n        }\r\n      } catch (apiError) {\r\n        console.error(\"Sunucu API hatası:\", apiError);\r\n        console.log(\"Fakat yerel veriler güncellendi, frontend işleyişi devam edecek\");\r\n        // Sunucu hatasını göster\r\n        // setError('Sunucuya bağlanırken bir hata oluştu, ancak verileriniz yerel olarak kaydedildi.');\r\n        // setTimeout(() => setError(''), 5000);\r\n      }\r\n      \r\n      // Başarı mesajı göstermiyoruz\r\n      // setSuccessMessage('Kilo kaydınız başarıyla eklendi.');\r\n      // setShowSuccessMessage(true);\r\n      \r\n      // setTimeout(() => {\r\n      //   setShowSuccessMessage(false);\r\n        \r\n      //   // Hemen kilo takibi sekmesine geçiş yapalım\r\n      //   setActiveTab('kilo');\r\n      // }, 2000);\r\n      \r\n      // Doğrudan kilo takibi sekmesine geçiş yapalım\r\n      setActiveTab('kilo');\r\n      \r\n    } catch (error) {\r\n      console.error('Kilo eklenirken hata:', error);\r\n      setError('Kilo eklenemedi: ' + error.message);\r\n    } finally {\r\n      setIsLoading(false); // Yükleniyor durumunu kapat\r\n    }\r\n  };\r\n\r\n  const handleSaveHealthInfo = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        throw new Error('Oturum zaman aşımına uğradı. Lütfen tekrar giriş yapın.');\r\n      }\r\n      \r\n      // İyimser UI güncellemesi\r\n      const optimisticUserData = { \r\n        ...userData, \r\n        info: {\r\n          ...userData.info,\r\n          diseases: diseases,\r\n          medications: medications\r\n        }\r\n      };\r\n      \r\n      setUserData(optimisticUserData);\r\n      localStorage.setItem('userData', JSON.stringify(optimisticUserData));\r\n      setHealthInfoEditing(false); // Düzenleme modunu kapat\r\n      \r\n      // API çağrısı\r\n      const response = await axios.post(\r\n        'http://localhost:5000/api/profile/update',\r\n        {\r\n          type: 'health',\r\n          diseases: diseases,\r\n          medications: medications\r\n        },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      \r\n      console.log(\"Sağlık bilgileri güncelleme yanıtı:\", response.data);\r\n      \r\n      // Başarı mesajı göster\r\n      setSuccessMessage('Sağlık bilgileriniz başarıyla güncellendi.');\r\n      setShowSuccessMessage(true);\r\n      \r\n      setTimeout(() => {\r\n        setShowSuccessMessage(false);\r\n      }, 3000);\r\n      \r\n      // Güncel verileri al\r\n      fetchUserData();\r\n    } catch (error) {\r\n      console.error('Sağlık bilgileri güncellenirken hata:', error);\r\n      setError('Sağlık bilgileriniz güncellenemedi. Lütfen tekrar deneyin.');\r\n      setHealthInfoEditing(true); // Hata durumunda düzenleme modunu aktif tut\r\n      fetchUserData(); // Orijinal verileri geri yükle\r\n    }\r\n  };\r\n\r\n  const handleDeleteNote = async (note) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        throw new Error('Oturum zaman aşımına uğradı. Lütfen tekrar giriş yapın.');\r\n      }\r\n      \r\n      // Not ID'sini konsola yazdır (debug için)\r\n      console.log(\"Silinecek not ID:\", note.id);\r\n      console.log(\"Tüm not objesi:\", note);\r\n      \r\n      // Not ID'sinin geçerli olduğunu kontrol et\r\n      if (!note.id) {\r\n        setError('Not ID bulunamadı. Lütfen yenileyin ve tekrar deneyin.');\r\n        return;\r\n      }\r\n      \r\n      // İyimser UI güncellemesi\r\n      const filteredNotes = userData.notes.filter(n => n.id !== note.id);\r\n      const optimisticUserData = { ...userData, notes: filteredNotes };\r\n      setUserData(optimisticUserData);\r\n      localStorage.setItem('userData', JSON.stringify(optimisticUserData));\r\n      \r\n      try {\r\n        // Not silme API çağrısı\r\n        const response = await axios.post(\r\n          'http://localhost:5000/api/profile/delete-note',\r\n          { noteId: note.id },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        \r\n        console.log(\"Not silme yanıtı:\", response.data);\r\n        \r\n        // Başarı mesajı göster\r\n        setSuccessMessage('Not başarıyla silindi.');\r\n        setShowSuccessMessage(true);\r\n        setTimeout(() => setShowSuccessMessage(false), 3000);\r\n      } catch (apiError) {\r\n        console.error('Not silme API hatası:', apiError);\r\n        \r\n        // API hatası olsa bile UI'da notu kaldır (kullanıcı deneyimi için)\r\n        // Arka planda yeniden senkronize etmek için sunucudan verileri al\r\n        fetchUserData();\r\n        \r\n        // Kullanıcıya bildirim göster\r\n        setError('Sunucu hatası: Not silinirken bir problem oluştu, ancak notunuz yerel olarak kaldırıldı.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Not silme genel hatası:', error);\r\n      fetchUserData(); // Verileri yeniden al\r\n      setError('Not silinirken bir hata oluştu. Lütfen tekrar deneyin.');\r\n    }\r\n  };\r\n\r\n  const handleSavePersonalInfo = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      setIsLoading(true); // Yükleme göstergesi ekle\r\n      \r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        throw new Error('Oturum zaman aşımına uğradı. Lütfen tekrar giriş yapın.');\r\n      }\r\n      \r\n      // Mevcut durumu loglama\r\n      console.log(\"Güncellenecek değerler:\", {\r\n        name, goal, height, weight, age, gender\r\n      });\r\n      \r\n      // Form verilerini hazırla, boş değerleri güvenli şekilde işle\r\n      const updateData = {\r\n        type: 'personal',\r\n        name: name.trim() || undefined,\r\n        goal: goal || undefined,\r\n        height: height ? height.toString() : undefined,\r\n        weight: weight ? weight.toString() : undefined,\r\n        age: age ? age.toString() : undefined,\r\n        gender: gender || undefined\r\n      };\r\n      \r\n      console.log(\"Gönderilen profil verileri:\", updateData);\r\n      \r\n      // İyimser UI güncellemesi\r\n      const optimisticUserData = { \r\n        ...userData, \r\n        name: name, \r\n        goal: goal,\r\n        info: {\r\n          ...userData.info,\r\n          height: height,\r\n          weight: weight,\r\n          age: age,\r\n          gender: gender\r\n        }\r\n      };\r\n      \r\n      // State'i ve localStorage'ı güncelle\r\n      setUserData(optimisticUserData);\r\n      localStorage.setItem('userData', JSON.stringify(optimisticUserData));\r\n      \r\n      // API isteği gönder\r\n      const response = await axios.post(\r\n        'http://localhost:5000/api/profile/update',\r\n        updateData,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      \r\n      console.log(\"Sunucu yanıtı:\", response.data);\r\n      \r\n      // API yanıtı başarılıysa\r\n      if (response.data && response.data.success) {\r\n        // Sunucudan güncel kullanıcı verilerini al\r\n        if (response.data.user) {\r\n          const updatedUserData = response.data.user;\r\n          setUserData(updatedUserData);\r\n          localStorage.setItem('userData', JSON.stringify(updatedUserData));\r\n          console.log('Kullanıcı verileri API yanıtından güncellendi');\r\n          \r\n          // Bilgileri state'e aktar\r\n          if (updatedUserData.info) {\r\n            setDiseases(updatedUserData.info.diseases || '');\r\n            setMedications(updatedUserData.info.medications || '');\r\n            setHeight(updatedUserData.info.height || '');\r\n            setWeight(updatedUserData.info.weight || '');\r\n            setAge(updatedUserData.info.age || '');\r\n            setGender(updatedUserData.info.gender || '');\r\n          }\r\n          \r\n          setName(updatedUserData.name || '');\r\n          setGoal(updatedUserData.goal || '');\r\n        } else {\r\n          // API güncellenen kullanıcı verilerini döndürmediyse, güncel verileri al\r\n          console.log('API güncellenen kullanıcı verilerini döndürmedi, fetchUserData çağrılıyor');\r\n          fetchUserData();\r\n        }\r\n        \r\n        setPersonalInfoEditing(false);\r\n        \r\n        // Başarı mesajı göster\r\n        setSuccessMessage('Bilgileriniz başarıyla güncellendi.');\r\n        setShowSuccessMessage(true);\r\n        \r\n        setTimeout(() => {\r\n          setShowSuccessMessage(false);\r\n        }, 3000);\r\n      } else {\r\n        // API başarılı değilse\r\n        console.error('API yanıtı başarısız:', response.data);\r\n        setError('Bilgileriniz güncellenirken bir hata oluştu. Lütfen tekrar deneyin.');\r\n        \r\n        // Güncel verileri al\r\n        fetchUserData();\r\n      }\r\n    } catch (error) {\r\n      console.error('Kişisel bilgiler güncellenirken hata:', error);\r\n      \r\n      // Hata detaylarını göster\r\n      if (error.response) {\r\n        console.error('Sunucu yanıtı:', error.response.data);\r\n        console.error('Durum kodu:', error.response.status);\r\n      } else if (error.request) {\r\n        console.error('Yanıt alınamadı:', error.request);\r\n      }\r\n      \r\n      // Hata durumunda güncel verileri al\r\n      fetchUserData();\r\n      setError('Bilgileriniz güncellenirken bir hata oluştu. Lütfen tekrar deneyin.');\r\n    } finally {\r\n      setIsLoading(false); // Yükleme göstergesini kaldır\r\n    }\r\n  };\r\n\r\n  // Kilo kaydını silme fonksiyonu\r\n  const handleDeleteWeight = async (weightId) => {\r\n    // Onay iste\r\n    if (!window.confirm('Bu kilo kaydını silmek istediğinizden emin misiniz?')) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setIsLoading(true);\r\n      \r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        throw new Error('Oturum zaman aşımına uğradı. Lütfen tekrar giriş yapın.');\r\n      }\r\n      \r\n      console.log(\"Silinecek kilo kaydı ID:\", weightId);\r\n      \r\n      // Önce yerel verileri güncelleyelim\r\n      let currentUserData = {...userData};\r\n      \r\n      // weightLogs dizisinden ilgili kaydı çıkar\r\n      if (currentUserData.weightLogs && Array.isArray(currentUserData.weightLogs)) {\r\n        currentUserData.weightLogs = currentUserData.weightLogs.filter(log => log.id !== weightId);\r\n        \r\n        // Eğer kalan son kayıt varsa, current weight'i güncelle\r\n        if (currentUserData.weightLogs.length > 0) {\r\n          // En son kayıt tarihi en yeni olan\r\n          const sortedLogs = [...currentUserData.weightLogs].sort((a, b) => new Date(b.date) - new Date(a.date));\r\n          const lastLog = sortedLogs[0];\r\n          \r\n          if (!currentUserData.info) {\r\n            currentUserData.info = {};\r\n          }\r\n          \r\n          currentUserData.info.weight = lastLog.weight;\r\n        }\r\n        \r\n        // State'i ve localStorage'ı güncelle\r\n        setUserData(currentUserData);\r\n        if (currentUserData.info && currentUserData.info.weight) {\r\n          setWeight(currentUserData.info.weight.toString());\r\n        }\r\n        \r\n        localStorage.setItem('userData', JSON.stringify(currentUserData));\r\n        console.log(\"Kilo kaydı yerel olarak silindi\");\r\n      }\r\n      \r\n      // Sunucudan da silme işlemi\r\n      try {\r\n        const response = await axios.post(\r\n          'http://localhost:5000/api/profile/delete-weight',\r\n          {\r\n            weightId: weightId\r\n          },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        \r\n        console.log(\"Sunucu silme yanıtı:\", response.data);\r\n        \r\n        if (response.data && response.data.success) {\r\n          console.log(\"Kilo kaydı sunucudan başarıyla silindi\");\r\n        } else {\r\n          console.warn(\"Sunucudan silme başarılı mesajı alınamadı:\", response.data);\r\n        }\r\n      } catch (apiError) {\r\n        console.error(\"Sunucu silme API hatası:\", apiError);\r\n        // Hata mesajını da kaldıralım, kullanıcı sadece işlemin yapıldığını bilmek istiyor\r\n        // setError('Sunucudan silme sırasında bir hata oluştu, ancak yerel verilerden silindi.');\r\n        // setTimeout(() => setError(''), 5000);\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Kilo kaydı silinirken hata:', error);\r\n      setError('Kilo kaydı silinemedi: ' + error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const renderTabs = () => {\r\n    return (\r\n      <div className=\"tabs\" style={{ position: 'relative', zIndex: 9000 }}>\r\n        <div\r\n          className={`tab ${activeTab === 'kisisel' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('kisisel')}\r\n          style={{ cursor: 'pointer !important', position: 'relative', zIndex: 9000 }}\r\n        >\r\n          Kişisel Bilgiler\r\n        </div>\r\n        <div\r\n          className={`tab ${activeTab === 'kilo' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('kilo')}\r\n          style={{ cursor: 'pointer !important', position: 'relative', zIndex: 9000 }}\r\n        >\r\n          Kilo Takibi\r\n        </div>\r\n        <div\r\n          className={`tab ${activeTab === 'hedef' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('hedef')}\r\n          style={{ cursor: 'pointer !important', position: 'relative', zIndex: 9000 }}\r\n        >\r\n          Hedefler\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderProfileTab = () => (\r\n    <div className=\"profile-tab\">\r\n      <div className=\"profile-header-card\">\r\n        <div className=\"flex justify-between items-center mb-4\">\r\n          <h3 className=\"text-xl font-bold\">Profil Bilgilerim</h3>\r\n          {!personalInfoEditing && (\r\n            <button onClick={() => setPersonalInfoEditing(true)} className=\"btn btn-outline\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-1 inline\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\r\n              </svg>\r\n              Düzenle\r\n            </button>\r\n          )}\r\n        </div>\r\n        \r\n        {personalInfoEditing ? (\r\n          <form onSubmit={handleSavePersonalInfo} className=\"mt-4\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\" className=\"form-label\">İsim Soyisim</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  className=\"form-input\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  placeholder=\"Adınız Soyadınız\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"height\" className=\"form-label\">Boy (cm)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"height\"\r\n                  className=\"form-input\"\r\n                  value={height}\r\n                  onChange={(e) => setHeight(e.target.value)}\r\n                  placeholder=\"Örn: 175\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"current-weight\" className=\"form-label\">Kilo (kg)</label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"current-weight\"\r\n                  className=\"form-input\"\r\n                  value={weight}\r\n                  onChange={(e) => setWeight(e.target.value)}\r\n                  placeholder=\"Örn: 70\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"age\" className=\"form-label\">Yaş</label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"age\"\r\n                  className=\"form-input\"\r\n                  value={age}\r\n                  onChange={(e) => setAge(e.target.value)}\r\n                  placeholder=\"Örn: 30\"\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"gender\" className=\"form-label\">Cinsiyet</label>\r\n                <select\r\n                  id=\"gender\"\r\n                  className=\"form-input\"\r\n                  value={gender}\r\n                  onChange={(e) => setGender(e.target.value)}\r\n                >\r\n                  <option value=\"erkek\">Erkek</option>\r\n                  <option value=\"kadın\">Kadın</option>\r\n                  <option value=\"diğer\">Diğer</option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"goal\" className=\"form-label\">Hedef</label>\r\n                <select\r\n                  id=\"goal\"\r\n                  className=\"form-input\"\r\n                  value={goal}\r\n                  onChange={(e) => setGoal(e.target.value)}\r\n                >\r\n                  <option value=\"kilo_verme\">Kilo Vermek</option>\r\n                  <option value=\"kilo_alma\">Kilo Almak</option>\r\n                  <option value=\"kilo_koruma\">Kilo Korumak</option>\r\n                  <option value=\"kas_kazanma\">Kas Kazanmak</option>\r\n                  <option value=\"saglikli_beslenme\">Sağlıklı Beslenme</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex justify-end gap-2 mt-4\">\r\n              <button \r\n                type=\"button\" \r\n                onClick={() => setPersonalInfoEditing(false)} \r\n                className=\"btn btn-outline\"\r\n              >\r\n                İptal\r\n              </button>\r\n              <button type=\"submit\" className=\"btn\">\r\n                {isLoading ? (\r\n                  <span className=\"flex items-center\">\r\n                    <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                    </svg>\r\n                    Kaydediliyor...\r\n                  </span>\r\n                ) : \"Kaydet\"}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            <div className=\"profile-info-card\">\r\n              <div className=\"profile-avatar\">\r\n                {name ? name.charAt(0).toUpperCase() : '?'}\r\n              </div>\r\n              <h2 className=\"profile-name\">{name || 'İsimsiz Kullanıcı'}</h2>\r\n              <p className=\"profile-bio\">\r\n                {userData && userData.joinDate && userData.joinDate !== 'Invalid Date' \r\n                  ? `${new Date(userData.joinDate).toLocaleDateString('tr-TR')} tarihinde katıldı` \r\n                  : 'Diyet Dostu üyesi'}\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"profile-metrics-card\">\r\n              <div className=\"metric-item\">\r\n                <div className=\"metric-label\">Boy</div>\r\n                <div className=\"metric-value\">{height ? `${height} cm` : '--'}</div>\r\n              </div>\r\n              <div className=\"metric-item\">\r\n                <div className=\"metric-label\">Kilo</div>\r\n                <div className=\"metric-value\">{weight ? `${weight} kg` : '--'}</div>\r\n              </div>\r\n              <div className=\"metric-item\">\r\n                <div className=\"metric-label\">BMI</div>\r\n                <div className=\"metric-value\">\r\n                  {height && weight \r\n                    ? (weight / ((height/100) * (height/100))).toFixed(1) \r\n                    : '--'}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"profile-stats-card\">\r\n              <div className=\"stats-title\">İstatistikler</div>\r\n              <div className=\"stats-grid\">\r\n                <div className=\"stat-item\">\r\n                  <div className=\"stat-value\">{userData && userData.weightLogs ? userData.weightLogs.length : 0}</div>\r\n                  <div className=\"stat-label\">Kilo Kaydı</div>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <div className=\"stat-value\">{userData && userData.notes ? userData.notes.length : 0}</div>\r\n                  <div className=\"stat-label\">Not</div>\r\n                </div>\r\n                <div className=\"stat-item\">\r\n                  <div className=\"stat-value\">\r\n                    {goal \r\n                      ? goal === 'kilo_verme' \r\n                        ? 'Kilo Verme' \r\n                        : goal === 'kilo_alma' \r\n                          ? 'Kilo Alma' \r\n                          : goal === 'kilo_koruma' \r\n                            ? 'Kilo Koruma' \r\n                            : goal === 'kas_kazanma' \r\n                              ? 'Kas Kazanma' \r\n                              : 'Sağlıklı Beslenme'\r\n                      : '--'}\r\n                  </div>\r\n                  <div className=\"stat-label\">Hedef</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {!personalInfoEditing && (\r\n        <div className=\"card mt-6\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">BMI Değeri</h3>\r\n          <div className=\"bmi-gauge\">\r\n            {height && weight ? (\r\n              <>\r\n                <div className=\"bmi-meter-container\">\r\n                  <div className=\"bmi-meter\">\r\n                    <div className=\"bmi-scale\">\r\n                      <div className=\"bmi-section bmi-underweight\"></div>\r\n                      <div className=\"bmi-section bmi-normal\"></div>\r\n                      <div className=\"bmi-section bmi-overweight\"></div>\r\n                      <div className=\"bmi-section bmi-obese\"></div>\r\n                    </div>\r\n                    <div \r\n                      className=\"bmi-indicator\" \r\n                      style={{ \r\n                        left: `${Math.min(Math.max((weight / ((height/100) * (height/100)) - 10) * 5, 0), 100)}%` \r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"bmi-labels\">\r\n                    <span>Zayıf</span>\r\n                    <span>Normal</span>\r\n                    <span>Fazla Kilolu</span>\r\n                    <span>Obez</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"bmi-value\">\r\n                  <span className=\"text-2xl font-bold\">\r\n                    {(weight / ((height/100) * (height/100))).toFixed(1)}\r\n                  </span>\r\n                  <span className=\"text-sm ml-2\">kg/m²</span>\r\n                </div>\r\n                <p className=\"bmi-description mt-3\">\r\n                  {weight / ((height/100) * (height/100)) < 18.5 \r\n                    ? 'Düşük kilolu kategoridesiniz. Sağlıklı beslenme ve tıbbi tavsiye önemlidir.' \r\n                    : weight / ((height/100) * (height/100)) < 25 \r\n                      ? 'Tebrikler! Sağlıklı kilo aralığındasınız.' \r\n                      : weight / ((height/100) * (height/100)) < 30 \r\n                        ? 'Fazla kilolu kategoridesiniz. Sağlıklı beslenme ve egzersiz önerilir.' \r\n                        : 'Obez kategoridesiniz. Bir sağlık uzmanının tavsiyelerini almanız önerilir.'}\r\n                </p>\r\n              </>\r\n            ) : (\r\n              <p className=\"text-center py-4\">BMI hesaplaması için boy ve kilo bilgilerinizi ekleyin.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {!personalInfoEditing && userData && userData.goal && (\r\n        <div className=\"card mt-6\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">Hedef İlerleme</h3>\r\n          <div className=\"progress-container\">\r\n            <div className=\"progress-info\">\r\n              <span>İlerleme: %{userData.goalProgress || 0}</span>\r\n              <span>{userData.goalStart || '--'} → {userData.goalTarget || '--'}</span>\r\n            </div>\r\n            <div className=\"progress-bar\">\r\n              <div \r\n                className=\"progress-fill\"\r\n                style={{width: `${userData.goalProgress || 0}%`}}\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {!personalInfoEditing && userData?.weightLogs?.length > 0 && (\r\n        <div className=\"card mt-6\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">Kilo Takibi</h3>\r\n          \r\n          {/* Eski çubuk grafik yerine daha küçük ve zarif modern çizgi grafik */}\r\n          {userData.weightLogs.length > 1 && (\r\n            <div className=\"pro-chart-container\" style={{ zIndex: 1, position: 'relative' }}>\r\n              {(() => {\r\n                // Kilo kayıtlarını tarihe göre sırala\r\n                const sortedLogs = [...userData.weightLogs].sort((a, b) => new Date(a.date) - new Date(b.date));\r\n                \r\n                // Değerler için ölçek hesapla\r\n                const weights = sortedLogs.map(log => parseFloat(log.weight));\r\n                const maxWeight = Math.max(...weights);\r\n                const minWeight = Math.min(...weights);\r\n                const padding = Math.max(0.5, (maxWeight - minWeight) * 0.1);\r\n                const adjustedMin = Math.max(0, minWeight - padding);\r\n                const adjustedMax = maxWeight + padding;\r\n                const range = adjustedMax - adjustedMin;\r\n                \r\n                // X ekseni için tarih etiketleri\r\n                const dateLabels = sortedLogs.map(log => {\r\n                  const date = new Date(log.date);\r\n                  return `${date.getDate()}/${date.getMonth() + 1}`;\r\n                });\r\n                \r\n                // Gösterilecek X etiketleri (en fazla 4 tane)\r\n                const xLabelIndices = [];\r\n                if (sortedLogs.length <= 4) {\r\n                  for (let i = 0; i < sortedLogs.length; i++) {\r\n                    xLabelIndices.push(i);\r\n                  }\r\n                } else {\r\n                  xLabelIndices.push(0); // İlk\r\n                  \r\n                  if (sortedLogs.length > 2) {\r\n                    xLabelIndices.push(Math.floor(sortedLogs.length / 3)); // Yaklaşık üçte bir\r\n                  }\r\n                  \r\n                  if (sortedLogs.length > 3) {\r\n                    xLabelIndices.push(Math.floor(2 * sortedLogs.length / 3)); // Yaklaşık üçte iki\r\n                  }\r\n                  \r\n                  xLabelIndices.push(sortedLogs.length - 1); // Son\r\n                }\r\n                \r\n                // SVG için nokta koordinatları\r\n                const points = sortedLogs.map((log, index) => {\r\n                  const x = (index / (sortedLogs.length - 1)) * 90;\r\n                  const y = 100 - ((parseFloat(log.weight) - adjustedMin) / range * 100);\r\n                  return { x, y, log, date: new Date(log.date).toLocaleDateString('tr-TR') };\r\n                });\r\n                \r\n                // SVG path için çizgi noktaları\r\n                const linePath = points.map((point, i) => \r\n                  `${i === 0 ? 'M' : 'L'} ${point.x} ${point.y}`\r\n                ).join(' ');\r\n                \r\n                // SVG path için alan dolgusu\r\n                const areaPath = `${linePath} L ${points[points.length - 1].x} 100 L 0 100 Z`;\r\n                \r\n                return (\r\n                  <div className=\"pro-chart-inner\" style={{ backgroundColor: 'white', borderRadius: '8px', padding: '10px 5px 20px' }}>\r\n                    <div className=\"pro-chart-header\">\r\n                      <div className=\"pro-chart-title\" style={{ fontSize: '0.85rem' }}>Kilo Takibi</div>\r\n                      <div className=\"pro-chart-legend\">\r\n                        <span className=\"text-xs text-gray-500\">{dateLabels[0]} - {dateLabels[dateLabels.length-1]}</span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"pro-chart-canvas\" style={{ height: '70px' }}>\r\n                      {/* Y ekseni değerleri */}\r\n                      <div className=\"pro-chart-y-axis\">\r\n                        <span className=\"pro-chart-y-label\">{adjustedMax.toFixed(1)} kg</span>\r\n                        <span className=\"pro-chart-y-label\">{adjustedMin.toFixed(1)} kg</span>\r\n                      </div>\r\n                      \r\n                      <svg className=\"pro-chart-svg\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\">\r\n                        {/* Gradient tanımı */}\r\n                        <defs>\r\n                          <linearGradient id=\"pro-chart-gradient-small\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n                            <stop offset=\"0%\" stopColor=\"#4CAF50\" stopOpacity=\"0.6\" />\r\n                            <stop offset=\"100%\" stopColor=\"#4CAF50\" stopOpacity=\"0.1\" />\r\n                          </linearGradient>\r\n                        </defs>\r\n                        \r\n                        {/* Izgara çizgileri - daha hafif */}\r\n                        <line x1=\"0\" y1=\"0\" x2=\"100\" y2=\"0\" className=\"pro-chart-grid-line\" style={{ stroke: 'rgba(0,0,0,0.03)' }} />\r\n                        <line x1=\"0\" y1=\"50\" x2=\"100\" y2=\"50\" className=\"pro-chart-grid-line\" style={{ stroke: 'rgba(0,0,0,0.03)' }} />\r\n                        <line x1=\"0\" y1=\"100\" x2=\"100\" y2=\"100\" className=\"pro-chart-grid-line\" style={{ stroke: 'rgba(0,0,0,0.03)' }} />\r\n                        \r\n                        {/* Alan dolgusu */}\r\n                        <path d={areaPath} style={{ fill: 'url(#pro-chart-gradient-small)', opacity: 0.2 }} />\r\n                        \r\n                        {/* Çizgi */}\r\n                        <path d={linePath} style={{ fill: 'none', stroke: '#4CAF50', strokeWidth: '1.5', strokeLinecap: 'round', strokeLinejoin: 'round' }} />\r\n                        \r\n                        {/* Veri noktaları */}\r\n                        {points.map((point, i) => (\r\n                          <circle \r\n                            key={i}\r\n                            cx={point.x} \r\n                            cy={point.y} \r\n                            r=\"1.5\"\r\n                            style={{ fill: 'white', stroke: '#4CAF50', strokeWidth: '1.5' }}\r\n                            data-weight={point.log.weight}\r\n                            data-date={point.date}\r\n                            className=\"pro-chart-dot\"\r\n                          />\r\n                        ))}\r\n                      </svg>\r\n                      \r\n                      {/* X ekseni değerleri */}\r\n                      <div className=\"pro-chart-x-axis\">\r\n                        {xLabelIndices.map(idx => (\r\n                          <span \r\n                            key={`label-${idx}`} \r\n                            style={{ position: 'absolute', left: `${points[idx].x}%`, transform: 'translateX(-50%)', fontSize: '0.65rem', color: '#666' }}\r\n                          >\r\n                            {dateLabels[idx]}\r\n                          </span>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })()}\r\n            </div>\r\n          )}\r\n          \r\n          {/* Son kilo değişimi özeti */}\r\n          {userData.weightLogs.length > 1 && (\r\n            <div className=\"flex justify-center mt-3\">\r\n              <div className=\"text-center text-sm\">\r\n                <span className=\"font-medium\">Son kayıt: </span>\r\n                <span className=\"font-bold\">{\r\n                  userData.weightLogs\r\n                    .sort((a, b) => new Date(b.date) - new Date(a.date))[0].weight\r\n                } kg</span>\r\n                <span className=\"mx-2\">•</span>\r\n                <span className=\"font-medium\">Toplam kayıt: </span>\r\n                <span className=\"font-bold\">{userData.weightLogs.length}</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const renderWeightTab = () => {\r\n    // Tablo oluşturulması için kilo kayıtlarını hazırla\r\n    let weightLogsToDisplay = [];\r\n    \r\n    if (userData && userData.weightLogs) {\r\n      if (Array.isArray(userData.weightLogs)) {\r\n        weightLogsToDisplay = [...userData.weightLogs];\r\n      } else {\r\n        // Dizi değilse dizi haline getir\r\n        weightLogsToDisplay = [userData.weightLogs];\r\n      }\r\n    }\r\n    \r\n    console.log(\"Görüntülenecek kilo kayıtları:\", weightLogsToDisplay);\r\n    \r\n    return (\r\n      <div>\r\n        <div className=\"card\">\r\n          <h3 className=\"text-xl font-bold mb-4\">Kilo Geçmişi</h3>\r\n          \r\n          {weightLogsToDisplay.length > 0 ? (\r\n            <div className=\"mt-4\">\r\n              <div className=\"overflow-x-auto\">\r\n                <table className=\"w-full modern-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"text-left px-4 py-2\">Tarih</th>\r\n                      <th className=\"text-center px-4 py-2\">Kilo (kg)</th>\r\n                      <th className=\"text-center w-16 px-4 py-2\">İşlem</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {weightLogsToDisplay\r\n                      .slice() // Kopya oluştur\r\n                      .sort((a, b) => new Date(b.date) - new Date(a.date)) // En yeni kayıt üstte\r\n                      .map((log, index) => {\r\n                        // Bir önceki kilo kaydı ile farkı hesapla\r\n                        let weightDiff = null;\r\n                        if (index < weightLogsToDisplay.length - 1) {\r\n                          const sortedLogs = [...weightLogsToDisplay].sort((a, b) => new Date(b.date) - new Date(a.date));\r\n                          if (index + 1 < sortedLogs.length) {\r\n                            weightDiff = parseFloat(log.weight) - parseFloat(sortedLogs[index + 1].weight);\r\n                          }\r\n                        }\r\n                        \r\n                        return (\r\n                          <tr key={log.id || index} className={index % 2 === 0 ? 'bg-gray-50' : ''}>\r\n                            <td className=\"px-4 py-3\">\r\n                              <span className=\"font-medium\">{new Date(log.date).toLocaleDateString('tr-TR')}</span>\r\n                              <span className=\"text-xs text-gray-500 block\">{new Date(log.date).toLocaleTimeString('tr-TR', {hour: '2-digit', minute:'2-digit'})}</span>\r\n                            </td>\r\n                            <td className=\"text-center px-4 py-3\">\r\n                              <span className=\"font-semibold\">{log.weight} kg</span>\r\n                              {weightDiff !== null && (\r\n                                <span className={`ml-2 text-xs font-medium rounded-full px-2 py-1 ${\r\n                                  weightDiff < 0 \r\n                                    ? 'bg-green-100 text-green-800' \r\n                                    : weightDiff > 0 \r\n                                      ? 'bg-red-100 text-red-800' \r\n                                      : 'bg-gray-100 text-gray-800'\r\n                                }`}>\r\n                                  {weightDiff < 0 ? '↓' : weightDiff > 0 ? '↑' : '='}\r\n                                  {Math.abs(weightDiff).toFixed(1)} kg\r\n                                </span>\r\n                              )}\r\n                            </td>\r\n                            <td className=\"text-center px-4 py-3\">\r\n                              <button \r\n                                onClick={() => handleDeleteWeight(log.id)} \r\n                                className=\"text-red-500 hover:text-red-700 transition-colors bg-red-50 hover:bg-red-100 p-1.5 rounded-full\"\r\n                                title=\"Kilo kaydını sil\"\r\n                              >\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                                </svg>\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })\r\n                    }\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              \r\n              {/* Kilo değişim grafiği */}\r\n              {weightLogsToDisplay.length > 1 && (\r\n                <div className=\"mt-8\">\r\n                  <h4 className=\"text-lg font-semibold mb-3\">Kilo Değişim Grafiği</h4>\r\n                  <div className=\"pro-chart-container\" style={{ maxWidth: '85%', margin: '0 auto' }}>\r\n                    {(() => {\r\n                      // Kilo kayıtlarını tarihe göre sırala\r\n                      const sortedLogs = [...weightLogsToDisplay].sort((a, b) => new Date(a.date) - new Date(b.date));\r\n                      \r\n                      // Değerler için ölçek hesapla\r\n                      const weights = sortedLogs.map(log => parseFloat(log.weight));\r\n                      const maxWeight = Math.max(...weights);\r\n                      const minWeight = Math.min(...weights);\r\n                      // Grafiği daha görsel hale getirmek için ölçekleri ayarla\r\n                      const padding = Math.max(0.5, (maxWeight - minWeight) * 0.1);\r\n                      const adjustedMin = Math.max(0, minWeight - padding);\r\n                      const adjustedMax = maxWeight + padding;\r\n                      const range = adjustedMax - adjustedMin;\r\n                      \r\n                      // X ekseni için tarih etiketleri\r\n                      const dateLabels = sortedLogs.map(log => {\r\n                        const date = new Date(log.date);\r\n                        return `${date.getDate()}/${date.getMonth() + 1}`;\r\n                      });\r\n                      \r\n                      // Gösterilecek X etiketleri (en fazla 5-6 tane)\r\n                      const xLabelIndices = [];\r\n                      if (sortedLogs.length <= 6) {\r\n                        // 6 veya daha az nokta varsa hepsini göster\r\n                        for (let i = 0; i < sortedLogs.length; i++) {\r\n                          xLabelIndices.push(i);\r\n                        }\r\n                      } else {\r\n                        // İlk, son ve arada eşit dağılımlı noktaları göster\r\n                        xLabelIndices.push(0); // İlk\r\n                        \r\n                        const step = Math.ceil(sortedLogs.length / 4);\r\n                        for (let i = step; i < sortedLogs.length - 1; i += step) {\r\n                          xLabelIndices.push(i);\r\n                        }\r\n                        \r\n                        xLabelIndices.push(sortedLogs.length - 1); // Son\r\n                      }\r\n                      \r\n                      // SVG için nokta koordinatları - %85'e kadar kullan\r\n                      const points = sortedLogs.map((log, index) => {\r\n                        const x = (index / (sortedLogs.length - 1)) * 85;\r\n                        const y = 100 - ((parseFloat(log.weight) - adjustedMin) / range * 100);\r\n                        return { x, y, log, date: new Date(log.date).toLocaleDateString('tr-TR') };\r\n                      });\r\n                      \r\n                      // SVG path için çizgi noktaları\r\n                      const linePath = points.map((point, i) => \r\n                        `${i === 0 ? 'M' : 'L'} ${point.x} ${point.y}`\r\n                      ).join(' ');\r\n                      \r\n                      // SVG path için alan dolgusu\r\n                      const areaPath = `${linePath} L ${points[points.length - 1].x} 100 L 0 100 Z`;\r\n                      \r\n                      return (\r\n                        <div className=\"pro-chart-inner\">\r\n                          <div className=\"pro-chart-header\">\r\n                            <div className=\"pro-chart-title\">Kilo Takibi</div>\r\n                            <div className=\"pro-chart-legend\">\r\n                              <span className=\"text-sm\">{sortedLogs[0].date ? new Date(sortedLogs[0].date).toLocaleDateString('tr-TR', {month: 'numeric', year: 'numeric'}) : ''} - {sortedLogs[sortedLogs.length-1].date ? new Date(sortedLogs[sortedLogs.length-1].date).toLocaleDateString('tr-TR', {month: 'numeric', year: 'numeric'}) : ''}</span>\r\n                            </div>\r\n                          </div>\r\n                          \r\n                          <div className=\"pro-chart-canvas\" style={{ height: '150px' }}>\r\n                            {/* Y ekseni değerleri */}\r\n                            <div className=\"pro-chart-y-axis\">\r\n                              <span className=\"pro-chart-y-label\">{adjustedMax.toFixed(1)} kg</span>\r\n                              <span className=\"pro-chart-y-label\">{((adjustedMax + adjustedMin) / 2).toFixed(1)} kg</span>\r\n                              <span className=\"pro-chart-y-label\">{adjustedMin.toFixed(1)} kg</span>\r\n                            </div>\r\n                            \r\n                            <svg className=\"pro-chart-svg\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\">\r\n                              {/* Gradient tanımı */}\r\n                              <defs>\r\n                                <linearGradient id=\"pro-chart-gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n                                  <stop offset=\"0%\" stopColor=\"#ff3366\" stopOpacity=\"0.7\" />\r\n                                  <stop offset=\"100%\" stopColor=\"#ff3366\" stopOpacity=\"0.1\" />\r\n                                </linearGradient>\r\n                              </defs>\r\n                              \r\n                              {/* Izgara çizgileri */}\r\n                              <line x1=\"0\" y1=\"0\" x2=\"100\" y2=\"0\" className=\"pro-chart-grid-line\" />\r\n                              <line x1=\"0\" y1=\"33.33\" x2=\"100\" y2=\"33.33\" className=\"pro-chart-grid-line\" />\r\n                              <line x1=\"0\" y1=\"66.66\" x2=\"100\" y2=\"66.66\" className=\"pro-chart-grid-line\" />\r\n                              <line x1=\"0\" y1=\"100\" x2=\"100\" y2=\"100\" className=\"pro-chart-grid-line\" />\r\n                              \r\n                              {/* Dikey çizgiler */}\r\n                              {xLabelIndices.map(idx => (\r\n                                <line \r\n                                  key={`grid-${idx}`}\r\n                                  x1={points[idx].x} \r\n                                  y1=\"0\" \r\n                                  x2={points[idx].x} \r\n                                  y2=\"100\" \r\n                                  className=\"pro-chart-grid-line\" \r\n                                />\r\n                              ))}\r\n                              \r\n                              {/* Alan dolgusu */}\r\n                              <path d={areaPath} className=\"pro-chart-area\" />\r\n                              \r\n                              {/* Çizgi */}\r\n                              <path d={linePath} className=\"pro-chart-line\" />\r\n                              \r\n                              {/* Veri noktaları */}\r\n                              {points.map((point, i) => (\r\n                                <circle \r\n                                  key={i}\r\n                                  cx={point.x} \r\n                                  cy={point.y} \r\n                                  className=\"pro-chart-dot\"\r\n                                  data-weight={point.log.weight}\r\n                                  data-date={point.date}\r\n                                  onMouseOver={(e) => {\r\n                                    const tooltip = document.querySelector('.pro-chart-tooltip');\r\n                                    if (!tooltip) return;\r\n                                    \r\n                                    tooltip.style.opacity = 1;\r\n                                    tooltip.style.left = `${e.target.cx.baseVal.value}%`;\r\n                                    tooltip.style.top = `${e.target.cy.baseVal.value}%`;\r\n                                    \r\n                                    const valueElem = tooltip.querySelector('.pro-chart-tooltip-value');\r\n                                    const dateElem = tooltip.querySelector('.pro-chart-tooltip-date');\r\n                                    \r\n                                    if (valueElem) valueElem.textContent = `${point.log.weight} kg`;\r\n                                    if (dateElem) dateElem.textContent = point.date;\r\n                                  }}\r\n                                  onMouseOut={() => {\r\n                                    const tooltip = document.querySelector('.pro-chart-tooltip');\r\n                                    if (tooltip) tooltip.style.opacity = 0;\r\n                                  }}\r\n                                />\r\n                              ))}\r\n                            </svg>\r\n                            \r\n                            {/* X ekseni değerleri */}\r\n                            <div className=\"pro-chart-x-axis\">\r\n                              {xLabelIndices.map(idx => (\r\n                                <span \r\n                                  key={`label-${idx}`} \r\n                                  className=\"pro-chart-x-label\"\r\n                                  style={{ left: `${points[idx].x}%` }}\r\n                                >\r\n                                  {dateLabels[idx]}\r\n                                </span>\r\n                              ))}\r\n                            </div>\r\n                            \r\n                            {/* Tooltip */}\r\n                            <div className=\"pro-chart-tooltip\" ref={tooltipRef} style={{ zIndex: 5 }}>\r\n                              <div className=\"pro-chart-tooltip-value\"></div>\r\n                              <div className=\"pro-chart-tooltip-date\"></div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })()}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-center py-4\">Henüz kilo kaydı bulunmuyor.</p>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"card mt-6\">\r\n          <h3 className=\"text-xl font-bold mb-4\">Yeni Kilo Ekle</h3>\r\n          <form onSubmit={handleAddWeight} className=\"mt-4\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"new-weight\" className=\"form-label\">Kilonuz (kg)</label>\r\n              <div className=\"flex\">\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"new-weight\"\r\n                  className=\"form-input\"\r\n                  value={newWeight}\r\n                  onChange={(e) => setNewWeight(e.target.value)}\r\n                  placeholder=\"Örn: 70.5\"\r\n                  step=\"0.1\"\r\n                  min=\"30\"\r\n                  max=\"250\"\r\n                  required\r\n                />\r\n                <button \r\n                  type=\"submit\" \r\n                  className=\"btn ml-2\"\r\n                  disabled={isLoading}\r\n                >\r\n                  {isLoading ? (\r\n                    <span className=\"flex items-center\">\r\n                      <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                      </svg>\r\n                      Ekleniyor...\r\n                    </span>\r\n                  ) : \"Ekle\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderExerciseTab = () => (\r\n    <div className=\"card\">\r\n      <h3>Egzersiz Planım</h3>\r\n      {userData.exercisePlan && userData.exercisePlan.length > 0 ? (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4\">\r\n          {userData.exercisePlan.map((exercise, index) => (\r\n            <div key={index} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h4 className=\"font-semibold\">{exercise.name}</h4>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={exercise.completed}\r\n                  onChange={() => handleToggleExercise(exercise)}\r\n                  className=\"h-5 w-5 text-diet-green\"\r\n                />\r\n              </div>\r\n              <p className=\"text-gray-600 mt-2\">{exercise.description}</p>\r\n              <div className=\"mt-2 text-sm\">\r\n                <span className=\"inline-block bg-diet-light-green text-diet-green-dark px-2 py-1 rounded mr-2\">\r\n                  {exercise.duration} dakika\r\n                </span>\r\n                <span className=\"inline-block bg-diet-light-blue text-diet-blue-dark px-2 py-1 rounded\">\r\n                  {exercise.caloriesBurned} kalori\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p className=\"text-center py-4\">Henüz egzersiz planı oluşturulmadı.</p>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const renderDietTab = () => (\r\n    <div className=\"card\">\r\n      <h3>Beslenme Planım</h3>\r\n      {userData.dietPlan && Object.keys(userData.dietPlan).length > 0 ? (\r\n        <div className=\"mt-4\">\r\n          {Object.entries(userData.dietPlan).map(([day, meals]) => (\r\n            <div key={day} className=\"mb-6\">\r\n              <h4 className=\"font-semibold mb-2\">{day}</h4>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n                {meals.map((meal, index) => (\r\n                  <div key={index} className=\"border rounded-lg p-3 hover:shadow-md transition-shadow\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <h5 className=\"font-semibold\">{meal.name}</h5>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={meal.completed}\r\n                        onChange={() => handleToggleMeal(day, meal)}\r\n                        className=\"h-5 w-5 text-diet-green\"\r\n                      />\r\n                    </div>\r\n                    <p className=\"text-gray-600 mt-2\">{meal.description}</p>\r\n                    <div className=\"mt-2 text-sm flex flex-wrap gap-1\">\r\n                      <span className=\"inline-block bg-diet-light-green text-diet-green-dark px-2 py-1 rounded\">\r\n                        {meal.calories} kalori\r\n                      </span>\r\n                      <span className=\"inline-block bg-diet-light-blue text-diet-blue-dark px-2 py-1 rounded\">\r\n                        {meal.protein}g protein\r\n                      </span>\r\n                      <span className=\"inline-block bg-diet-light-yellow text-diet-yellow-dark px-2 py-1 rounded\">\r\n                        {meal.carbs}g karbonhidrat\r\n                      </span>\r\n                      <span className=\"inline-block bg-diet-light-red text-diet-red-dark px-2 py-1 rounded\">\r\n                        {meal.fat}g yağ\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p className=\"text-center py-4\">Henüz beslenme planı oluşturulmadı.</p>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const renderHealthTab = () => (\r\n    <div className=\"card\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h3>Sağlık Bilgilerim</h3>\r\n        {!healthInfoEditing && (\r\n          <button onClick={() => setHealthInfoEditing(true)} className=\"btn btn-outline\">\r\n            Düzenle\r\n          </button>\r\n        )}\r\n      </div>\r\n      \r\n      {healthInfoEditing ? (\r\n        <form onSubmit={handleSaveHealthInfo} className=\"mt-4\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"diseases\" className=\"form-label\">Kronik Hastalıklar / Sağlık Durumu</label>\r\n            <textarea\r\n              id=\"diseases\"\r\n              className=\"form-input\"\r\n              value={diseases}\r\n              onChange={(e) => setDiseases(e.target.value)}\r\n              placeholder=\"Diyabet, hipertansiyon, vb.\"\r\n              rows=\"3\"\r\n            ></textarea>\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"medications\" className=\"form-label\">Düzenli Kullandığınız İlaçlar</label>\r\n            <textarea\r\n              id=\"medications\"\r\n              className=\"form-input\"\r\n              value={medications}\r\n              onChange={(e) => setMedications(e.target.value)}\r\n              placeholder=\"İlaç isimleri ve dozaj bilgileri\"\r\n              rows=\"3\"\r\n            ></textarea>\r\n          </div>\r\n          \r\n          <div className=\"flex gap-2\">\r\n            <button type=\"submit\" className=\"btn\">Kaydet</button>\r\n            <button type=\"button\" onClick={() => setHealthInfoEditing(false)} className=\"btn btn-outline\">\r\n              İptal\r\n            </button>\r\n          </div>\r\n        </form>\r\n      ) : (\r\n        <div>\r\n          <div className=\"mb-4\">\r\n            <h4 className=\"font-semibold mb-2\">Kronik Hastalıklar / Sağlık Durumu</h4>\r\n            <p>{diseases || 'Belirtilmemiş'}</p>\r\n          </div>\r\n          \r\n          <div>\r\n            <h4 className=\"font-semibold mb-2\">Düzenli Kullandığınız İlaçlar</h4>\r\n            <p>{medications || 'Belirtilmemiş'}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const renderNotesTab = () => (\r\n    <div>\r\n      <div className=\"card\">\r\n        <h3>Notlarım</h3>\r\n        {userData.notes && userData.notes.length > 0 ? (\r\n          <div className=\"flex flex-col space-y-2 mt-4\">\r\n            {userData.notes.map((note, index) => (\r\n              <div key={index} className=\"flex items-start gap-3 p-3 border rounded hover:shadow-sm transition-shadow\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={note.completed}\r\n                  onChange={() => handleToggleNote(note)}\r\n                  className=\"h-5 w-5 text-diet-green mt-1\"\r\n                />\r\n                <div className={`flex-grow ${note.completed ? 'line-through text-gray-400' : ''}`}>\r\n                  <p>{note.text}</p>\r\n                  <p className=\"text-xs text-gray-500 mt-1\">\r\n                    {note.date ? `${new Date(note.date).toLocaleDateString('tr-TR')} - ${new Date(note.date).toLocaleTimeString('tr-TR')}` : 'Tarih bilgisi yok'}\r\n                  </p>\r\n                </div>\r\n                <button \r\n                  onClick={() => handleDeleteNote(note)} \r\n                  className=\"text-diet-red hover:text-diet-red-dark transition-colors\"\r\n                  title=\"Notu sil\"\r\n                >\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" className=\"w-5 h-5\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p className=\"text-center py-4\">Henüz notunuz bulunmuyor.</p>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"card\">\r\n        <h3>Yeni Not Ekle</h3>\r\n        <form onSubmit={handleAddNote} className=\"mt-4\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"note\" className=\"form-label\">Notunuz</label>\r\n            <div className=\"flex\">\r\n              <input\r\n                type=\"text\"\r\n                id=\"note\"\r\n                className=\"form-input\"\r\n                value={newNote}\r\n                onChange={(e) => setNewNote(e.target.value)}\r\n                placeholder=\"Notunuzu buraya yazın...\"\r\n                required\r\n              />\r\n              <button type=\"submit\" className=\"btn ml-2\">Ekle</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container py-6\" style={{ marginTop: '70px' }}>\r\n      {renderTabs()}\r\n      \r\n      {showSuccessMessage && (\r\n        <div className=\"success-message\">\r\n          <div className=\"success-content\">\r\n            <p>{successMessage}</p>\r\n            <button \r\n              onClick={() => setShowSuccessMessage(false)}\r\n              className=\"success-close\"\r\n            >\r\n              Tamam\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {error && (\r\n        <div className=\"error-message\">\r\n          <div className=\"error-content\">\r\n            <p>{error}</p>\r\n            <button \r\n              onClick={() => setError('')}\r\n              className=\"error-close\"\r\n            >\r\n              Tamam\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {loading ? (\r\n        <div className=\"flex justify-center items-center min-h-[60vh]\">\r\n          <div className=\"text-center\">\r\n            <div className=\"w-16 h-16 border-4 border-t-transparent rounded-full animate-spin mx-auto mb-4\" \r\n                 style={{borderColor: 'var(--primary-color) transparent transparent transparent'}}></div>\r\n            <p>Profil bilgileri yükleniyor...</p>\r\n          </div>\r\n        </div>\r\n      ) : error && !loading ? (\r\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mx-auto max-w-md mt-10\">\r\n          {error}\r\n        </div>\r\n      ) : !userData ? (\r\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mx-auto max-w-md mt-10\">\r\n          Kullanıcı verileri bulunamadı.\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          {activeTab === 'bilgiler' && renderProfileTab()}\r\n          {activeTab === 'kilo' && renderWeightTab()}\r\n          {activeTab === 'egzersiz' && renderExerciseTab()}\r\n          {activeTab === 'beslenme' && renderDietTab()}\r\n          {activeTab === 'saglik' && renderHealthTab()}\r\n          {activeTab === 'notlar' && renderNotesTab()}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}